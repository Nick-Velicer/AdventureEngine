//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedServices
import (
   "errors"
   "reflect"
   types "AdventureEngineServer/generatedDatabaseTypes"
   "gorm.io/gorm"
)

func GetCharacters(db *gorm.DB, characters *[]types.Character) error {
   result := db.Table("Character").Find(characters)
   return result.Error
}

func GetCharacterById(db *gorm.DB, id int, character *types.Character) error {
   result := db.Table("Character").First(character, id)
   return result.Error
}

func SaveCharacter(db *gorm.DB, characters []*types.Character) error {
   tx := db.Begin()
   
   if tx.Error != nil {
      return errors.New("Could not initialize transaction to save " + reflect.TypeOf(characters).Name() + " entity")
   }
   
   defer func() {
      if r := recover(); r != nil {
         tx.Rollback()
      }
   }()
   
   if err := tx.Error; err != nil {
      return err
   }
   
   if err := tx.Table("Character").Create(characters).Error; err != nil {
      tx.Rollback()
      return err
   }
   
   return tx.Commit().Error
}

func GetCharacterDomainCharacterStatInstancesByCharacterId(db *gorm.DB, id int, CharacterDomainCharacterStatInstances *[]types.CharacterDomainCharacterStatInstance) error {
   result := db.Table("CharacterDomainCharacterStatInstance").Where(map[string]interface{}{"Character__Character": id}).Find(CharacterDomainCharacterStatInstances)
   return result.Error
}
func GetCharacterDomainSubClassInstancesByCharacterId(db *gorm.DB, id int, CharacterDomainSubClassInstances *[]types.CharacterDomainSubClassInstance) error {
   result := db.Table("CharacterDomainSubClassInstance").Where(map[string]interface{}{"Character__Character": id}).Find(CharacterDomainSubClassInstances)
   return result.Error
}
