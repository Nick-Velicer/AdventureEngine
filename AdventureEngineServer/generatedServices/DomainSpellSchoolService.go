//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedServices
import (
   "errors"
   "reflect"
   types "AdventureEngineServer/generatedDatabaseTypes"
   "gorm.io/gorm"
)

func GetDomainSpellSchools(db *gorm.DB, domainSpellSchools *[]types.DomainSpellSchool) error {
   result := db.Table("DomainSpellSchool").Find(domainSpellSchools)
   return result.Error
}

func GetDomainSpellSchoolById(db *gorm.DB, id int, domainSpellSchool *types.DomainSpellSchool) error {
   result := db.Table("DomainSpellSchool").First(domainSpellSchool, id)
   return result.Error
}

func SaveDomainSpellSchool(db *gorm.DB, domainSpellSchool *types.DomainSpellSchool) error {
   tx := db.Begin()
   
   if tx.Error != nil {
   return errors.New("Could not initialize transaction to save " + reflect.TypeOf(domainSpellSchool).Name() + " entity")
   }
   
   defer func() {
      if r := recover(); r != nil {
         tx.Rollback()
      }
   }()
   
   if err := tx.Error; err != nil {
      return err
   }
   
   if domainSpellSchool.Id != nil {
      print("Saving\n")
      if err := tx.Table("DomainSpellSchool").Save(domainSpellSchool).Error; err != nil {
         tx.Rollback()
         return err
      }
   } else {
      print("Creating\n")
      if err := tx.Table("DomainSpellSchool").Create(domainSpellSchool).Error; err != nil {
         tx.Rollback()
         return err
      }
      print(domainSpellSchool.Id)
   }
   
   return tx.Commit().Error
}

