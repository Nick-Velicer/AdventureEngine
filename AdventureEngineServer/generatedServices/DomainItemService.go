//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedServices
import (
   "errors"
   "reflect"
   types "AdventureEngineServer/generatedDatabaseTypes"
   "gorm.io/gorm"
)

func GetDomainItems(db *gorm.DB, domainItems *[]types.DomainItem) error {
   result := db.Table("DomainItem").Find(domainItems)
   return result.Error
}

func GetDomainItemById(db *gorm.DB, id int, domainItem *types.DomainItem) error {
   result := db.Table("DomainItem").First(domainItem, id)
   return result.Error
}

func SaveDomainItem(db *gorm.DB, domainItems []*types.DomainItem) error {
   tx := db.Begin()
   
   if tx.Error != nil {
      return errors.New("Could not initialize transaction to save " + reflect.TypeOf(domainItems).Name() + " entity")
   }
   
   defer func() {
      if r := recover(); r != nil {
         tx.Rollback()
      }
   }()
   
   if err := tx.Error; err != nil {
      return err
   }
   
   if err := tx.Table("DomainItem").Create(domainItems).Error; err != nil {
      tx.Rollback()
      return err
   }
   
   return tx.Commit().Error
}

