//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedServices
import (
   "errors"
   "reflect"
   types "AdventureEngineServer/generatedDatabaseTypes"
   "gorm.io/gorm"
)

func GetClassSaves(db *gorm.DB, classSaves *[]types.ClassSave) error {
   result := db.Table("ClassSave").Find(classSaves)
   return result.Error
}

func GetClassSaveById(db *gorm.DB, id int, classSave *types.ClassSave) error {
   result := db.Table("ClassSave").First(classSave, id)
   return result.Error
}

func SaveClassSave(db *gorm.DB, classSave *types.ClassSave) error {
   tx := db.Begin()
   
   if tx.Error != nil {
   return errors.New("Could not initialize transaction to save " + reflect.TypeOf(classSave).Name() + " entity")
   }
   
   defer func() {
      if r := recover(); r != nil {
         tx.Rollback()
      }
   }()
   
   if err := tx.Error; err != nil {
      return err
   }
   
   if classSave.Id != nil {
      print("Saving\n")
      if err := tx.Table("ClassSave").Save(classSave).Error; err != nil {
         tx.Rollback()
         return err
      }
   } else {
      print("Creating\n")
      if err := tx.Table("ClassSave").Create(classSave).Error; err != nil {
         tx.Rollback()
         return err
      }
      print(classSave.Id)
   }
   
   return tx.Commit().Error
}

