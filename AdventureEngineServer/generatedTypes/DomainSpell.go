// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package generatedtypes

type DomainSpellJson struct {
	// ConcentrationRequired corresponds to the JSON schema field
	// "concentrationRequired".
	ConcentrationRequired *bool `json:"concentrationRequired,omitempty" yaml:"concentrationRequired,omitempty" mapstructure:"concentrationRequired,omitempty"`

	// DamageScalingDomainDice corresponds to the JSON schema field
	// "damageScaling__domainDice".
	DamageScalingDomainDice *float64 `json:"damageScaling__domainDice,omitempty" yaml:"damageScaling__domainDice,omitempty" mapstructure:"damageScaling__domainDice,omitempty"`

	// Description corresponds to the JSON schema field "description".
	Description *string `json:"description,omitempty" yaml:"description,omitempty" mapstructure:"description,omitempty"`

	// HourCastTime corresponds to the JSON schema field "hourCastTime".
	HourCastTime *float64 `json:"hourCastTime,omitempty" yaml:"hourCastTime,omitempty" mapstructure:"hourCastTime,omitempty"`

	// HourDuration corresponds to the JSON schema field "hourDuration".
	HourDuration *float64 `json:"hourDuration,omitempty" yaml:"hourDuration,omitempty" mapstructure:"hourDuration,omitempty"`

	// Id corresponds to the JSON schema field "id".
	Id *float64 `json:"id,omitempty" yaml:"id,omitempty" mapstructure:"id,omitempty"`

	// IsAction corresponds to the JSON schema field "isAction".
	IsAction *bool `json:"isAction,omitempty" yaml:"isAction,omitempty" mapstructure:"isAction,omitempty"`

	// IsActive corresponds to the JSON schema field "isActive".
	IsActive *bool `json:"isActive,omitempty" yaml:"isActive,omitempty" mapstructure:"isActive,omitempty"`

	// IsBonusAction corresponds to the JSON schema field "isBonusAction".
	IsBonusAction *bool `json:"isBonusAction,omitempty" yaml:"isBonusAction,omitempty" mapstructure:"isBonusAction,omitempty"`

	// IsCantrip corresponds to the JSON schema field "isCantrip".
	IsCantrip *bool `json:"isCantrip,omitempty" yaml:"isCantrip,omitempty" mapstructure:"isCantrip,omitempty"`

	// IsMelee corresponds to the JSON schema field "isMelee".
	IsMelee *bool `json:"isMelee,omitempty" yaml:"isMelee,omitempty" mapstructure:"isMelee,omitempty"`

	// IsRanged corresponds to the JSON schema field "isRanged".
	IsRanged *bool `json:"isRanged,omitempty" yaml:"isRanged,omitempty" mapstructure:"isRanged,omitempty"`

	// IsRitual corresponds to the JSON schema field "isRitual".
	IsRitual *bool `json:"isRitual,omitempty" yaml:"isRitual,omitempty" mapstructure:"isRitual,omitempty"`

	// Level corresponds to the JSON schema field "level".
	Level *float64 `json:"level,omitempty" yaml:"level,omitempty" mapstructure:"level,omitempty"`

	// MaterialComponent corresponds to the JSON schema field "materialComponent".
	MaterialComponent *string `json:"materialComponent,omitempty" yaml:"materialComponent,omitempty" mapstructure:"materialComponent,omitempty"`

	// MinuteCastTime corresponds to the JSON schema field "minuteCastTime".
	MinuteCastTime *float64 `json:"minuteCastTime,omitempty" yaml:"minuteCastTime,omitempty" mapstructure:"minuteCastTime,omitempty"`

	// RoundDuration corresponds to the JSON schema field "roundDuration".
	RoundDuration *float64 `json:"roundDuration,omitempty" yaml:"roundDuration,omitempty" mapstructure:"roundDuration,omitempty"`

	// SchoolDomainSpellSchool corresponds to the JSON schema field
	// "school__domainSpellSchool".
	SchoolDomainSpellSchool *float64 `json:"school__domainSpellSchool,omitempty" yaml:"school__domainSpellSchool,omitempty" mapstructure:"school__domainSpellSchool,omitempty"`

	// SomaticComponent corresponds to the JSON schema field "somaticComponent".
	SomaticComponent *string `json:"somaticComponent,omitempty" yaml:"somaticComponent,omitempty" mapstructure:"somaticComponent,omitempty"`

	// Title corresponds to the JSON schema field "title".
	Title *string `json:"title,omitempty" yaml:"title,omitempty" mapstructure:"title,omitempty"`

	// VerbalComponent corresponds to the JSON schema field "verbalComponent".
	VerbalComponent *string `json:"verbalComponent,omitempty" yaml:"verbalComponent,omitempty" mapstructure:"verbalComponent,omitempty"`
}
