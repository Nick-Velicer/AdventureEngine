//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedControllers
import (
   "github.com/gin-gonic/gin"
   "gorm.io/gorm"
   "strconv"
   "net/http"
   services "AdventureEngineServer/generatedServices"
   types "AdventureEngineServer/generatedDatabaseTypes"
   dtos "AdventureEngineServer/generatedDTOs"
)

func GetDomainConditions(ctx *gin.Context, db *gorm.DB) {
   var serviceBuffer []types.DomainCondition
   err := services.GetDomainConditions(db, &serviceBuffer)
   if err != nil {
      ctx.IndentedJSON(http.StatusInternalServerError, err.Error())
      return
   }
   
   var returnBuffer []dtos.DomainConditionDTO
   tableName := "DomainCondition"
   for _, dbTypeInstance := range serviceBuffer {
      pointerToDTO := dtos.DomainConditionToDomainConditionDTO(db, &dbTypeInstance, &tableName)
      if (pointerToDTO != nil) {
         returnBuffer = append(returnBuffer, *pointerToDTO)
      }
   }
   ctx.IndentedJSON(http.StatusOK, returnBuffer)
}

func GetDomainConditionById(ctx *gin.Context, db *gorm.DB) {
   id := ctx.Param("id")
   idNum, err := strconv.Atoi(id)
   if err != nil {
      ctx.IndentedJSON(http.StatusInternalServerError, err.Error())
      return
   }
   var serviceBuffer types.DomainCondition
   err = services.GetDomainConditionById(db, idNum, &serviceBuffer)
   if err != nil {
      ctx.IndentedJSON(http.StatusInternalServerError, err.Error())
      return
   }
   
   tableName := "DomainCondition"
   returnBuffer := dtos.DomainConditionToDomainConditionDTO(db, &serviceBuffer, &tableName)
   ctx.IndentedJSON(http.StatusOK, returnBuffer)
}

func SaveDomainCondition(ctx *gin.Context, db *gorm.DB) {
   var serviceBuffer types.DomainCondition
   err := services.SaveDomainCondition(db, &serviceBuffer)
   if err != nil {
      ctx.IndentedJSON(http.StatusInternalServerError, err.Error())
      return
   }
   
   tableName := "DomainCondition"
   returnBuffer := dtos.DomainConditionToDomainConditionDTO(db, &serviceBuffer, &tableName)
   ctx.IndentedJSON(http.StatusOK, returnBuffer)
}
