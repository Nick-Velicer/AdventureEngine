// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package generatedDatabaseTypes

type DomainClass struct {
	// AbbreviatedTitle corresponds to the JSON schema field "AbbreviatedTitle".
	AbbreviatedTitle *string `json:"AbbreviatedTitle" gorm:"column:AbbreviatedTitle" mapstructure:"AbbreviatedTitle"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description" gorm:"column:Description" mapstructure:"Description"`

	// HitDieDomainDice corresponds to the JSON schema field "HitDie__DomainDice".
	HitDie__DomainDice *int `json:"HitDie__DomainDice" gorm:"column:HitDie__DomainDice" mapstructure:"HitDie__DomainDice"`

	// Id corresponds to the JSON schema field "Id".
	Id *int `json:"Id" gorm:"primaryKey;column:Id" mapstructure:"Id"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive" gorm:"column:IsActive" mapstructure:"IsActive"`

	// PrimaryStatsClassPrimaryAbility corresponds to the JSON schema field
	// "PrimaryStats__ClassPrimaryAbility".

	// SavesClassSave corresponds to the JSON schema field "Saves__ClassSave".

	// SpellcastingStatDomainCharacterStat corresponds to the JSON schema field
	// "SpellcastingStat__DomainCharacterStat".
	SpellcastingStat__DomainCharacterStat *int `json:"SpellcastingStat__DomainCharacterStat" gorm:"column:SpellcastingStat__DomainCharacterStat" mapstructure:"SpellcastingStat__DomainCharacterStat"`

	// SubClassesDomainSubClass corresponds to the JSON schema field
	// "SubClasses__DomainSubClass".

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title" gorm:"column:Title" mapstructure:"Title"`
}
