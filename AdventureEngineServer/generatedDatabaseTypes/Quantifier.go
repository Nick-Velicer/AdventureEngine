// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package generatedDatabaseTypes

type Quantifier struct {
	// AbbreviatedTitle corresponds to the JSON schema field "AbbreviatedTitle".
	AbbreviatedTitle *string `json:"AbbreviatedTitle" gorm:"column:AbbreviatedTitle" mapstructure:"AbbreviatedTitle"`

	// AppliesAgainstSource corresponds to the JSON schema field
	// "AppliesAgainstSource".
	AppliesAgainstSource *bool `json:"AppliesAgainstSource" gorm:"column:AppliesAgainstSource" mapstructure:"AppliesAgainstSource"`

	// AppliesAgainstSourceForTargetsOnly corresponds to the JSON schema field
	// "AppliesAgainstSourceForTargetsOnly".
	AppliesAgainstSourceForTargetsOnly *bool `json:"AppliesAgainstSourceForTargetsOnly" gorm:"column:AppliesAgainstSourceForTargetsOnly" mapstructure:"AppliesAgainstSourceForTargetsOnly"`

	// AppliesAgainstTargets corresponds to the JSON schema field
	// "AppliesAgainstTargets".
	AppliesAgainstTargets *bool `json:"AppliesAgainstTargets" gorm:"column:AppliesAgainstTargets" mapstructure:"AppliesAgainstTargets"`

	// AppliesAgainstTargetsForSourceOnly corresponds to the JSON schema field
	// "AppliesAgainstTargetsForSourceOnly".
	AppliesAgainstTargetsForSourceOnly *bool `json:"AppliesAgainstTargetsForSourceOnly" gorm:"column:AppliesAgainstTargetsForSourceOnly" mapstructure:"AppliesAgainstTargetsForSourceOnly"`

	// AppliesToSource corresponds to the JSON schema field "AppliesToSource".
	AppliesToSource *bool `json:"AppliesToSource" gorm:"column:AppliesToSource" mapstructure:"AppliesToSource"`

	// AppliesToTargets corresponds to the JSON schema field "AppliesToTargets".
	AppliesToTargets *bool `json:"AppliesToTargets" gorm:"column:AppliesToTargets" mapstructure:"AppliesToTargets"`

	// AutomaticFailure corresponds to the JSON schema field "AutomaticFailure".
	AutomaticFailure *bool `json:"AutomaticFailure" gorm:"column:AutomaticFailure" mapstructure:"AutomaticFailure"`

	// DeltaPercentage corresponds to the JSON schema field "DeltaPercentage".
	DeltaPercentage *float64 `json:"DeltaPercentage" gorm:"column:DeltaPercentage" mapstructure:"DeltaPercentage"`

	// DeltaQuantity corresponds to the JSON schema field "DeltaQuantity".
	DeltaQuantity *float64 `json:"DeltaQuantity" gorm:"column:DeltaQuantity" mapstructure:"DeltaQuantity"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description" gorm:"column:Description" mapstructure:"Description"`

	// GivesAction corresponds to the JSON schema field "GivesAction".
	GivesAction *bool `json:"GivesAction" gorm:"column:GivesAction" mapstructure:"GivesAction"`

	// GivesAdvantage corresponds to the JSON schema field "GivesAdvantage".
	GivesAdvantage *bool `json:"GivesAdvantage" gorm:"column:GivesAdvantage" mapstructure:"GivesAdvantage"`

	// GivesBonusAction corresponds to the JSON schema field "GivesBonusAction".
	GivesBonusAction *bool `json:"GivesBonusAction" gorm:"column:GivesBonusAction" mapstructure:"GivesBonusAction"`

	// GivesDisadvantage corresponds to the JSON schema field "GivesDisadvantage".
	GivesDisadvantage *bool `json:"GivesDisadvantage" gorm:"column:GivesDisadvantage" mapstructure:"GivesDisadvantage"`

	// HardSetPercentage corresponds to the JSON schema field "HardSetPercentage".
	HardSetPercentage *float64 `json:"HardSetPercentage" gorm:"column:HardSetPercentage" mapstructure:"HardSetPercentage"`

	// HardSetQuantity corresponds to the JSON schema field "HardSetQuantity".
	HardSetQuantity *float64 `json:"HardSetQuantity" gorm:"column:HardSetQuantity" mapstructure:"HardSetQuantity"`

	// Id corresponds to the JSON schema field "Id".
	Id *int `json:"Id" gorm:"primaryKey;column:Id" mapstructure:"Id"`

	// ImpactsMovementAmount corresponds to the JSON schema field
	// "ImpactsMovementAmount".
	ImpactsMovementAmount *bool `json:"ImpactsMovementAmount" gorm:"column:ImpactsMovementAmount" mapstructure:"ImpactsMovementAmount"`

	// IntoInventory corresponds to the JSON schema field "IntoInventory".
	IntoInventory *bool `json:"IntoInventory" gorm:"column:IntoInventory" mapstructure:"IntoInventory"`

	// IsAction corresponds to the JSON schema field "IsAction".
	IsAction *bool `json:"IsAction" gorm:"column:IsAction" mapstructure:"IsAction"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive" gorm:"column:IsActive" mapstructure:"IsActive"`

	// IsBonusAction corresponds to the JSON schema field "IsBonusAction".
	IsBonusAction *bool `json:"IsBonusAction" gorm:"column:IsBonusAction" mapstructure:"IsBonusAction"`

	// Level1SpellSlots corresponds to the JSON schema field "Level1SpellSlots".
	Level1SpellSlots *float64 `json:"Level1SpellSlots" gorm:"column:Level1SpellSlots" mapstructure:"Level1SpellSlots"`

	// Level2SpellSlots corresponds to the JSON schema field "Level2SpellSlots".
	Level2SpellSlots *float64 `json:"Level2SpellSlots" gorm:"column:Level2SpellSlots" mapstructure:"Level2SpellSlots"`

	// Level3SpellSlots corresponds to the JSON schema field "Level3SpellSlots".
	Level3SpellSlots *float64 `json:"Level3SpellSlots" gorm:"column:Level3SpellSlots" mapstructure:"Level3SpellSlots"`

	// Level4SpellSlots corresponds to the JSON schema field "Level4SpellSlots".
	Level4SpellSlots *float64 `json:"Level4SpellSlots" gorm:"column:Level4SpellSlots" mapstructure:"Level4SpellSlots"`

	// Level5SpellSlots corresponds to the JSON schema field "Level5SpellSlots".
	Level5SpellSlots *float64 `json:"Level5SpellSlots" gorm:"column:Level5SpellSlots" mapstructure:"Level5SpellSlots"`

	// Level6SpellSlots corresponds to the JSON schema field "Level6SpellSlots".
	Level6SpellSlots *float64 `json:"Level6SpellSlots" gorm:"column:Level6SpellSlots" mapstructure:"Level6SpellSlots"`

	// Level7SpellSlots corresponds to the JSON schema field "Level7SpellSlots".
	Level7SpellSlots *float64 `json:"Level7SpellSlots" gorm:"column:Level7SpellSlots" mapstructure:"Level7SpellSlots"`

	// Level8SpellSlots corresponds to the JSON schema field "Level8SpellSlots".
	Level8SpellSlots *float64 `json:"Level8SpellSlots" gorm:"column:Level8SpellSlots" mapstructure:"Level8SpellSlots"`

	// Level9SpellSlots corresponds to the JSON schema field "Level9SpellSlots".
	Level9SpellSlots *float64 `json:"Level9SpellSlots" gorm:"column:Level9SpellSlots" mapstructure:"Level9SpellSlots"`

	// LevelMaximumRequirement corresponds to the JSON schema field
	// "LevelMaximumRequirement".
	LevelMaximumRequirement *float64 `json:"LevelMaximumRequirement" gorm:"column:LevelMaximumRequirement" mapstructure:"LevelMaximumRequirement"`

	// LevelMinimumRequirement corresponds to the JSON schema field
	// "LevelMinimumRequirement".
	LevelMinimumRequirement *float64 `json:"LevelMinimumRequirement" gorm:"column:LevelMinimumRequirement" mapstructure:"LevelMinimumRequirement"`

	// ParentDomainAction corresponds to the JSON schema field "Parent__DomainAction".
	Parent__DomainAction *int `json:"Parent__DomainAction" gorm:"column:Parent__DomainAction" mapstructure:"Parent__DomainAction"`

	// ParentDomainClass corresponds to the JSON schema field "Parent__DomainClass".
	Parent__DomainClass *int `json:"Parent__DomainClass" gorm:"column:Parent__DomainClass" mapstructure:"Parent__DomainClass"`

	// ParentDomainClassTrait corresponds to the JSON schema field
	// "Parent__DomainClassTrait".
	Parent__DomainClassTrait *int `json:"Parent__DomainClassTrait" gorm:"column:Parent__DomainClassTrait" mapstructure:"Parent__DomainClassTrait"`

	// ParentDomainCondition corresponds to the JSON schema field
	// "Parent__DomainCondition".
	Parent__DomainCondition *int `json:"Parent__DomainCondition" gorm:"column:Parent__DomainCondition" mapstructure:"Parent__DomainCondition"`

	// ParentDomainStaticEffect corresponds to the JSON schema field
	// "Parent__DomainStaticEffect".
	Parent__DomainStaticEffect *int `json:"Parent__DomainStaticEffect" gorm:"column:Parent__DomainStaticEffect" mapstructure:"Parent__DomainStaticEffect"`

	// ParentDomainSubClass corresponds to the JSON schema field
	// "Parent__DomainSubClass".
	Parent__DomainSubClass *int `json:"Parent__DomainSubClass" gorm:"column:Parent__DomainSubClass" mapstructure:"Parent__DomainSubClass"`

	// Prevents corresponds to the JSON schema field "Prevents".
	Prevents *bool `json:"Prevents" gorm:"column:Prevents" mapstructure:"Prevents"`

	// QuantityRestoredOnShortRest corresponds to the JSON schema field
	// "QuantityRestoredOnShortRest".
	QuantityRestoredOnShortRest *float64 `json:"QuantityRestoredOnShortRest" gorm:"column:QuantityRestoredOnShortRest" mapstructure:"QuantityRestoredOnShortRest"`

	// RefreshOnLongRest corresponds to the JSON schema field "RefreshOnLongRest".
	RefreshOnLongRest *bool `json:"RefreshOnLongRest" gorm:"column:RefreshOnLongRest" mapstructure:"RefreshOnLongRest"`

	// RefreshOnShortRest corresponds to the JSON schema field "RefreshOnShortRest".
	RefreshOnShortRest *bool `json:"RefreshOnShortRest" gorm:"column:RefreshOnShortRest" mapstructure:"RefreshOnShortRest"`

	// ShouldBeEvaluatedAsModifier corresponds to the JSON schema field
	// "ShouldBeEvaluatedAsModifier".
	ShouldBeEvaluatedAsModifier *bool `json:"ShouldBeEvaluatedAsModifier" gorm:"column:ShouldBeEvaluatedAsModifier" mapstructure:"ShouldBeEvaluatedAsModifier"`

	// TargetMaximum corresponds to the JSON schema field "TargetMaximum".
	TargetMaximum *float64 `json:"TargetMaximum" gorm:"column:TargetMaximum" mapstructure:"TargetMaximum"`

	// TargetMinimum corresponds to the JSON schema field "TargetMinimum".
	TargetMinimum *float64 `json:"TargetMinimum" gorm:"column:TargetMinimum" mapstructure:"TargetMinimum"`

	// TargetDomainAction corresponds to the JSON schema field "Target__DomainAction".
	Target__DomainAction *int `json:"Target__DomainAction" gorm:"column:Target__DomainAction" mapstructure:"Target__DomainAction"`

	// TargetDomainCharacterStat corresponds to the JSON schema field
	// "Target__DomainCharacterStat".
	Target__DomainCharacterStat *int `json:"Target__DomainCharacterStat" gorm:"column:Target__DomainCharacterStat" mapstructure:"Target__DomainCharacterStat"`

	// TargetDomainCondition corresponds to the JSON schema field
	// "Target__DomainCondition".
	Target__DomainCondition *int `json:"Target__DomainCondition" gorm:"column:Target__DomainCondition" mapstructure:"Target__DomainCondition"`

	// TargetDomainDamageType corresponds to the JSON schema field
	// "Target__DomainDamageType".
	Target__DomainDamageType *int `json:"Target__DomainDamageType" gorm:"column:Target__DomainDamageType" mapstructure:"Target__DomainDamageType"`

	// TargetDomainDiceRollSubType corresponds to the JSON schema field
	// "Target__DomainDiceRollSubType".
	Target__DomainDiceRollSubType *int `json:"Target__DomainDiceRollSubType" gorm:"column:Target__DomainDiceRollSubType" mapstructure:"Target__DomainDiceRollSubType"`

	// TargetDomainDiceRollType corresponds to the JSON schema field
	// "Target__DomainDiceRollType".
	Target__DomainDiceRollType *int `json:"Target__DomainDiceRollType" gorm:"column:Target__DomainDiceRollType" mapstructure:"Target__DomainDiceRollType"`

	// TargetDomainSpell corresponds to the JSON schema field "Target__DomainSpell".
	Target__DomainSpell *int `json:"Target__DomainSpell" gorm:"column:Target__DomainSpell" mapstructure:"Target__DomainSpell"`

	// TargetDomainStaticEffect corresponds to the JSON schema field
	// "Target__DomainStaticEffect".
	Target__DomainStaticEffect *int `json:"Target__DomainStaticEffect" gorm:"column:Target__DomainStaticEffect" mapstructure:"Target__DomainStaticEffect"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title" gorm:"column:Title" mapstructure:"Title"`

	// UntilLongRest corresponds to the JSON schema field "UntilLongRest".
	UntilLongRest *bool `json:"UntilLongRest" gorm:"column:UntilLongRest" mapstructure:"UntilLongRest"`

	// UntilShortRest corresponds to the JSON schema field "UntilShortRest".
	UntilShortRest *bool `json:"UntilShortRest" gorm:"column:UntilShortRest" mapstructure:"UntilShortRest"`
}
