// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package generatedDatabaseTypes

type Quantifier struct {
	// AddedSpellDomainSpell corresponds to the JSON schema field
	// "AddedSpell__DomainSpell".
	AddedSpell__DomainSpell *int `json:"AddedSpell__DomainSpell" gorm:"column:AddedSpell__DomainSpell" mapstructure:"AddedSpell__DomainSpell"`

	// ConditionDomainCondition corresponds to the JSON schema field
	// "Condition__DomainCondition".
	Condition__DomainCondition *int `json:"Condition__DomainCondition" gorm:"column:Condition__DomainCondition" mapstructure:"Condition__DomainCondition"`

	// DamageTypeDomainDamageType corresponds to the JSON schema field
	// "DamageType__DomainDamageType".
	DamageType__DomainDamageType *int `json:"DamageType__DomainDamageType" gorm:"column:DamageType__DomainDamageType" mapstructure:"DamageType__DomainDamageType"`

	// Delta corresponds to the JSON schema field "Delta".
	Delta *float64 `json:"Delta" gorm:"column:Delta" mapstructure:"Delta"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description" gorm:"column:Description" mapstructure:"Description"`

	// EffectDomainStaticEffect corresponds to the JSON schema field
	// "Effect__DomainStaticEffect".
	Effect__DomainStaticEffect *int `json:"Effect__DomainStaticEffect" gorm:"column:Effect__DomainStaticEffect" mapstructure:"Effect__DomainStaticEffect"`

	// Id corresponds to the JSON schema field "Id".
	Id *int `json:"Id" gorm:"primaryKey;column:Id" mapstructure:"Id"`

	// ImpactsSelf corresponds to the JSON schema field "ImpactsSelf".
	ImpactsSelf *bool `json:"ImpactsSelf" gorm:"column:ImpactsSelf" mapstructure:"ImpactsSelf"`

	// IntoInventory corresponds to the JSON schema field "IntoInventory".
	IntoInventory *bool `json:"IntoInventory" gorm:"column:IntoInventory" mapstructure:"IntoInventory"`

	// IsAction corresponds to the JSON schema field "IsAction".
	IsAction *bool `json:"IsAction" gorm:"column:IsAction" mapstructure:"IsAction"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive" gorm:"column:IsActive" mapstructure:"IsActive"`

	// IsBonusAction corresponds to the JSON schema field "IsBonusAction".
	IsBonusAction *bool `json:"IsBonusAction" gorm:"column:IsBonusAction" mapstructure:"IsBonusAction"`

	// Level1SpellSlots corresponds to the JSON schema field "Level1SpellSlots".
	Level1SpellSlots *float64 `json:"Level1SpellSlots" gorm:"column:Level1SpellSlots" mapstructure:"Level1SpellSlots"`

	// Level2SpellSlots corresponds to the JSON schema field "Level2SpellSlots".
	Level2SpellSlots *float64 `json:"Level2SpellSlots" gorm:"column:Level2SpellSlots" mapstructure:"Level2SpellSlots"`

	// Level3SpellSlots corresponds to the JSON schema field "Level3SpellSlots".
	Level3SpellSlots *float64 `json:"Level3SpellSlots" gorm:"column:Level3SpellSlots" mapstructure:"Level3SpellSlots"`

	// Level4SpellSlots corresponds to the JSON schema field "Level4SpellSlots".
	Level4SpellSlots *float64 `json:"Level4SpellSlots" gorm:"column:Level4SpellSlots" mapstructure:"Level4SpellSlots"`

	// Level5SpellSlots corresponds to the JSON schema field "Level5SpellSlots".
	Level5SpellSlots *float64 `json:"Level5SpellSlots" gorm:"column:Level5SpellSlots" mapstructure:"Level5SpellSlots"`

	// Level6SpellSlots corresponds to the JSON schema field "Level6SpellSlots".
	Level6SpellSlots *float64 `json:"Level6SpellSlots" gorm:"column:Level6SpellSlots" mapstructure:"Level6SpellSlots"`

	// Level7SpellSlots corresponds to the JSON schema field "Level7SpellSlots".
	Level7SpellSlots *float64 `json:"Level7SpellSlots" gorm:"column:Level7SpellSlots" mapstructure:"Level7SpellSlots"`

	// Level8SpellSlots corresponds to the JSON schema field "Level8SpellSlots".
	Level8SpellSlots *float64 `json:"Level8SpellSlots" gorm:"column:Level8SpellSlots" mapstructure:"Level8SpellSlots"`

	// Level9SpellSlots corresponds to the JSON schema field "Level9SpellSlots".
	Level9SpellSlots *float64 `json:"Level9SpellSlots" gorm:"column:Level9SpellSlots" mapstructure:"Level9SpellSlots"`

	// LevelMaximumRequirement corresponds to the JSON schema field
	// "LevelMaximumRequirement".
	LevelMaximumRequirement *float64 `json:"LevelMaximumRequirement" gorm:"column:LevelMaximumRequirement" mapstructure:"LevelMaximumRequirement"`

	// LevelMinimumRequirement corresponds to the JSON schema field
	// "LevelMinimumRequirement".
	LevelMinimumRequirement *float64 `json:"LevelMinimumRequirement" gorm:"column:LevelMinimumRequirement" mapstructure:"LevelMinimumRequirement"`

	// Quantity corresponds to the JSON schema field "Quantity".
	Quantity *float64 `json:"Quantity" gorm:"column:Quantity" mapstructure:"Quantity"`

	// RefreshOnLongRest corresponds to the JSON schema field "RefreshOnLongRest".
	RefreshOnLongRest *bool `json:"RefreshOnLongRest" gorm:"column:RefreshOnLongRest" mapstructure:"RefreshOnLongRest"`

	// RefreshOnShortRest corresponds to the JSON schema field "RefreshOnShortRest".
	RefreshOnShortRest *bool `json:"RefreshOnShortRest" gorm:"column:RefreshOnShortRest" mapstructure:"RefreshOnShortRest"`

	// ResistanceTypeDomainDamageType corresponds to the JSON schema field
	// "ResistanceType__DomainDamageType".
	ResistanceType__DomainDamageType *int `json:"ResistanceType__DomainDamageType" gorm:"column:ResistanceType__DomainDamageType" mapstructure:"ResistanceType__DomainDamageType"`

	// SaveDomainCharacterStat corresponds to the JSON schema field
	// "Save__DomainCharacterStat".
	Save__DomainCharacterStat *int `json:"Save__DomainCharacterStat" gorm:"column:Save__DomainCharacterStat" mapstructure:"Save__DomainCharacterStat"`

	// TargetDomainCharacterStat corresponds to the JSON schema field
	// "Target__DomainCharacterStat".
	Target__DomainCharacterStat *int `json:"Target__DomainCharacterStat" gorm:"column:Target__DomainCharacterStat" mapstructure:"Target__DomainCharacterStat"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title" gorm:"column:Title" mapstructure:"Title"`

	// UntilLongRest corresponds to the JSON schema field "UntilLongRest".
	UntilLongRest *bool `json:"UntilLongRest" gorm:"column:UntilLongRest" mapstructure:"UntilLongRest"`

	// UntilShortRest corresponds to the JSON schema field "UntilShortRest".
	UntilShortRest *bool `json:"UntilShortRest" gorm:"column:UntilShortRest" mapstructure:"UntilShortRest"`
}
