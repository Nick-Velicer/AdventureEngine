// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package generatedDatabaseTypes

type DomainItem struct {
	// AbbreviatedTitle corresponds to the JSON schema field "AbbreviatedTitle".
	AbbreviatedTitle *string `json:"AbbreviatedTitle" gorm:"column:AbbreviatedTitle" mapstructure:"AbbreviatedTitle"`

	// CustomEffectText corresponds to the JSON schema field "CustomEffectText".
	CustomEffectText *string `json:"CustomEffectText" gorm:"column:CustomEffectText" mapstructure:"CustomEffectText"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description" gorm:"column:Description" mapstructure:"Description"`

	// Id corresponds to the JSON schema field "Id".
	Id *int `json:"Id" gorm:"primaryKey;column:Id" mapstructure:"Id"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive" gorm:"column:IsActive" mapstructure:"IsActive"`

	// OneHandedQuantifier corresponds to the JSON schema field "OneHandedQuantifier".
	OneHandedQuantifier *float64 `json:"OneHandedQuantifier" gorm:"column:OneHandedQuantifier" mapstructure:"OneHandedQuantifier"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title" gorm:"column:Title" mapstructure:"Title"`

	// TwoHandedQuantifier corresponds to the JSON schema field "TwoHandedQuantifier".
	TwoHandedQuantifier *float64 `json:"TwoHandedQuantifier" gorm:"column:TwoHandedQuantifier" mapstructure:"TwoHandedQuantifier"`
}
