// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package generatedDatabaseTypes

type DomainSpell struct {
	// AbbreviatedTitle corresponds to the JSON schema field "AbbreviatedTitle".
	AbbreviatedTitle *string `json:"AbbreviatedTitle" gorm:"column:AbbreviatedTitle" mapstructure:"AbbreviatedTitle"`

	// ClassesClassSpell corresponds to the JSON schema field "Classes__ClassSpell".

	// ConcentrationRequired corresponds to the JSON schema field
	// "ConcentrationRequired".
	ConcentrationRequired *bool `json:"ConcentrationRequired" gorm:"column:ConcentrationRequired" mapstructure:"ConcentrationRequired"`

	// DamageScalingDomainDice corresponds to the JSON schema field
	// "DamageScaling__DomainDice".
	DamageScaling__DomainDice *int `json:"DamageScaling__DomainDice" gorm:"column:DamageScaling__DomainDice" mapstructure:"DamageScaling__DomainDice"`

	// DayDuration corresponds to the JSON schema field "DayDuration".
	DayDuration *float64 `json:"DayDuration" gorm:"column:DayDuration" mapstructure:"DayDuration"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description" gorm:"column:Description" mapstructure:"Description"`

	// HasSomaticRequirement corresponds to the JSON schema field
	// "HasSomaticRequirement".
	HasSomaticRequirement *bool `json:"HasSomaticRequirement" gorm:"column:HasSomaticRequirement" mapstructure:"HasSomaticRequirement"`

	// HasVerbalRequirement corresponds to the JSON schema field
	// "HasVerbalRequirement".
	HasVerbalRequirement *bool `json:"HasVerbalRequirement" gorm:"column:HasVerbalRequirement" mapstructure:"HasVerbalRequirement"`

	// HourCastTime corresponds to the JSON schema field "HourCastTime".
	HourCastTime *float64 `json:"HourCastTime" gorm:"column:HourCastTime" mapstructure:"HourCastTime"`

	// HourDuration corresponds to the JSON schema field "HourDuration".
	HourDuration *float64 `json:"HourDuration" gorm:"column:HourDuration" mapstructure:"HourDuration"`

	// Id corresponds to the JSON schema field "Id".
	Id *int `json:"Id" gorm:"primaryKey;column:Id" mapstructure:"Id"`

	// IsAction corresponds to the JSON schema field "IsAction".
	IsAction *bool `json:"IsAction" gorm:"column:IsAction" mapstructure:"IsAction"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive" gorm:"column:IsActive" mapstructure:"IsActive"`

	// IsBonusAction corresponds to the JSON schema field "IsBonusAction".
	IsBonusAction *bool `json:"IsBonusAction" gorm:"column:IsBonusAction" mapstructure:"IsBonusAction"`

	// IsCantrip corresponds to the JSON schema field "IsCantrip".
	IsCantrip *bool `json:"IsCantrip" gorm:"column:IsCantrip" mapstructure:"IsCantrip"`

	// IsInstantaneous corresponds to the JSON schema field "IsInstantaneous".
	IsInstantaneous *bool `json:"IsInstantaneous" gorm:"column:IsInstantaneous" mapstructure:"IsInstantaneous"`

	// IsRitual corresponds to the JSON schema field "IsRitual".
	IsRitual *bool `json:"IsRitual" gorm:"column:IsRitual" mapstructure:"IsRitual"`

	// LastsUntilDispelled corresponds to the JSON schema field "LastsUntilDispelled".
	LastsUntilDispelled *bool `json:"LastsUntilDispelled" gorm:"column:LastsUntilDispelled" mapstructure:"LastsUntilDispelled"`

	// LevelRequirement corresponds to the JSON schema field "LevelRequirement".
	LevelRequirement *float64 `json:"LevelRequirement" gorm:"column:LevelRequirement" mapstructure:"LevelRequirement"`

	// MaterialComponent corresponds to the JSON schema field "MaterialComponent".
	MaterialComponent *string `json:"MaterialComponent" gorm:"column:MaterialComponent" mapstructure:"MaterialComponent"`

	// MinuteCastTime corresponds to the JSON schema field "MinuteCastTime".
	MinuteCastTime *float64 `json:"MinuteCastTime" gorm:"column:MinuteCastTime" mapstructure:"MinuteCastTime"`

	// MinuteDuration corresponds to the JSON schema field "MinuteDuration".
	MinuteDuration *float64 `json:"MinuteDuration" gorm:"column:MinuteDuration" mapstructure:"MinuteDuration"`

	// RangeFeet corresponds to the JSON schema field "RangeFeet".
	RangeFeet *float64 `json:"RangeFeet" gorm:"column:RangeFeet" mapstructure:"RangeFeet"`

	// RangeMiles corresponds to the JSON schema field "RangeMiles".
	RangeMiles *float64 `json:"RangeMiles" gorm:"column:RangeMiles" mapstructure:"RangeMiles"`

	// RequiresTouch corresponds to the JSON schema field "RequiresTouch".
	RequiresTouch *bool `json:"RequiresTouch" gorm:"column:RequiresTouch" mapstructure:"RequiresTouch"`

	// RoundDuration corresponds to the JSON schema field "RoundDuration".
	RoundDuration *float64 `json:"RoundDuration" gorm:"column:RoundDuration" mapstructure:"RoundDuration"`

	// SchoolDomainSpellSchool corresponds to the JSON schema field
	// "School__DomainSpellSchool".
	School__DomainSpellSchool *int `json:"School__DomainSpellSchool" gorm:"column:School__DomainSpellSchool" mapstructure:"School__DomainSpellSchool"`

	// TargetsSelf corresponds to the JSON schema field "TargetsSelf".
	TargetsSelf *bool `json:"TargetsSelf" gorm:"column:TargetsSelf" mapstructure:"TargetsSelf"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title" gorm:"column:Title" mapstructure:"Title"`
}
