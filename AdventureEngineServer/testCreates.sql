CREATE TABLE IF NOT EXISTS Campaign(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS Character(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT, Campaign__Campaign REAL, CurrentSize__DomainSize REAL, Species__DomainSpecies REAL, Subclass__DomainSubClass REAL, CONSTRAINT fk_Campaign FOREIGN KEY (Campaign__Campaign) REFERENCES Campaign(Id), CONSTRAINT fk_DomainSize FOREIGN KEY (CurrentSize__DomainSize) REFERENCES DomainSize(Id), CONSTRAINT fk_DomainSpecies FOREIGN KEY (Species__DomainSpecies) REFERENCES DomainSpecies(Id), CONSTRAINT fk_DomainSubClass FOREIGN KEY (Subclass__DomainSubClass) REFERENCES DomainSubClass(Id));
CREATE TABLE IF NOT EXISTS CharacterDomainCharacterStatInstance(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT, Character__Character REAL, StatInstance__DomainCharacterStat REAL, CONSTRAINT fk_Character FOREIGN KEY (Character__Character) REFERENCES Character(Id), CONSTRAINT fk_DomainCharacterStat FOREIGN KEY (StatInstance__DomainCharacterStat) REFERENCES DomainCharacterStat(Id));
CREATE TABLE IF NOT EXISTS DomainAction(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT, UsesAction NUMBER, UsesBonusAction NUMBER);
CREATE TABLE IF NOT EXISTS DomainCharacterStat(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Abbreviation TEXT, Description TEXT, IsActive NUMBER, IsBaseStat NUMBER, Title TEXT, UsesAction NUMBER, UsesBonusAction NUMBER);
CREATE TABLE IF NOT EXISTS DomainClass(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT, HitDie__DomainDice REAL, SpellcastingStat__DomainCharacterStat REAL, CONSTRAINT fk_DomainDice FOREIGN KEY (HitDie__DomainDice) REFERENCES DomainDice(Id), CONSTRAINT fk_DomainCharacterStat FOREIGN KEY (SpellcastingStat__DomainCharacterStat) REFERENCES DomainCharacterStat(Id));
CREATE TABLE IF NOT EXISTS DomainCondition(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainCreatureType(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainDamageType(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainDice(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Maximum REAL, Minimum REAL, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainDiceRollType(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainItem(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, CustomEffectText TEXT, Description TEXT, IsActive NUMBER, OneHandedQuantifier REAL, Title TEXT, TwoHandedQuantifier REAL);
CREATE TABLE IF NOT EXISTS DomainSize(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, BaseHexArea REAL, BaseTileArea REAL, Description TEXT, IsActive NUMBER, SizeOrder REAL, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainSpecies(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT, CreatureType__DomainCreatureType REAL, CONSTRAINT fk_DomainCreatureType FOREIGN KEY (CreatureType__DomainCreatureType) REFERENCES DomainCreatureType(Id));
CREATE TABLE IF NOT EXISTS DomainSpell(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ConcentrationRequired NUMBER, Description TEXT, HasSomaticRequirement NUMBER, HasVerbalRequirement NUMBER, HourCastTime REAL, HourDuration REAL, IsAction NUMBER, IsActive NUMBER, IsBonusAction NUMBER, IsCantrip NUMBER, IsMelee NUMBER, IsRanged NUMBER, IsRitual NUMBER, Level REAL, MaterialComponent TEXT, MinuteCastTime REAL, RoundDuration REAL, Title TEXT, DamageScaling__DomainDice REAL, School__DomainSpellSchool REAL, CONSTRAINT fk_DomainDice FOREIGN KEY (DamageScaling__DomainDice) REFERENCES DomainDice(Id), CONSTRAINT fk_DomainSpellSchool FOREIGN KEY (School__DomainSpellSchool) REFERENCES DomainSpellSchool(Id));
CREATE TABLE IF NOT EXISTS DomainSpellSchool(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainStaticEffect(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT);
CREATE TABLE IF NOT EXISTS DomainSubClass(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Description TEXT, IsActive NUMBER, Title TEXT, ParentClass__DomainClass REAL, CONSTRAINT fk_DomainClass FOREIGN KEY (ParentClass__DomainClass) REFERENCES DomainClass(Id));
CREATE TABLE IF NOT EXISTS Quantifier(Id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, Delta REAL, Description TEXT, ImpactsSelf NUMBER, IntoInventory NUMBER, IsAction NUMBER, IsActive NUMBER, IsBonusAction NUMBER, Level1SpellSlots REAL, Level2SpellSlots REAL, Level3SpellSlots REAL, Level4SpellSlots REAL, Level5SpellSlots REAL, Level6SpellSlots REAL, Level7SpellSlots REAL, Level8SpellSlots REAL, Level9SpellSlots REAL, LevelMaximumRequirement REAL, LevelMinimumRequirement REAL, Quantity REAL, RefreshOnLongRest NUMBER, RefreshOnShortRest NUMBER, Title TEXT, UntilLongRest NUMBER, UntilShortRest NUMBER, AddedSpell__DomainSpell REAL, Condition__DomainCondition REAL, DamageType__DomainDamageType REAL, Effect__DomainStaticEffect REAL, ResistanceType__DomainDamageType REAL, Save__DomainCharacterStat REAL, Target__DomainCharacterStat REAL, CONSTRAINT fk_DomainSpell FOREIGN KEY (AddedSpell__DomainSpell) REFERENCES DomainSpell(Id), CONSTRAINT fk_DomainCondition FOREIGN KEY (Condition__DomainCondition) REFERENCES DomainCondition(Id), CONSTRAINT fk_DomainDamageType FOREIGN KEY (DamageType__DomainDamageType) REFERENCES DomainDamageType(Id), CONSTRAINT fk_DomainStaticEffect FOREIGN KEY (Effect__DomainStaticEffect) REFERENCES DomainStaticEffect(Id), CONSTRAINT fk_DomainDamageType FOREIGN KEY (ResistanceType__DomainDamageType) REFERENCES DomainDamageType(Id), CONSTRAINT fk_DomainCharacterStat FOREIGN KEY (Save__DomainCharacterStat) REFERENCES DomainCharacterStat(Id), CONSTRAINT fk_DomainCharacterStat FOREIGN KEY (Target__DomainCharacterStat) REFERENCES DomainCharacterStat(Id));
