// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type QuantifierJson struct {
	// AddedSpellDomainSpell corresponds to the JSON schema field
	// "AddedSpell__DomainSpell".
	AddedSpellDomainSpell *float64 `json:"AddedSpell__DomainSpell,omitempty" yaml:"AddedSpell__DomainSpell,omitempty" mapstructure:"AddedSpell__DomainSpell,omitempty"`

	// ConditionDomainCondition corresponds to the JSON schema field
	// "Condition__DomainCondition".
	ConditionDomainCondition *float64 `json:"Condition__DomainCondition,omitempty" yaml:"Condition__DomainCondition,omitempty" mapstructure:"Condition__DomainCondition,omitempty"`

	// DamageTypeDomainDamageType corresponds to the JSON schema field
	// "DamageType__DomainDamageType".
	DamageTypeDomainDamageType *float64 `json:"DamageType__DomainDamageType,omitempty" yaml:"DamageType__DomainDamageType,omitempty" mapstructure:"DamageType__DomainDamageType,omitempty"`

	// Delta corresponds to the JSON schema field "Delta".
	Delta *float64 `json:"Delta,omitempty" yaml:"Delta,omitempty" mapstructure:"Delta,omitempty"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description,omitempty" yaml:"Description,omitempty" mapstructure:"Description,omitempty"`

	// EffectDomainStaticEffect corresponds to the JSON schema field
	// "Effect__DomainStaticEffect".
	EffectDomainStaticEffect *float64 `json:"Effect__DomainStaticEffect,omitempty" yaml:"Effect__DomainStaticEffect,omitempty" mapstructure:"Effect__DomainStaticEffect,omitempty"`

	// Id corresponds to the JSON schema field "Id".
	Id *float64 `json:"Id,omitempty" yaml:"Id,omitempty" mapstructure:"Id,omitempty"`

	// ImpactsSelf corresponds to the JSON schema field "ImpactsSelf".
	ImpactsSelf *bool `json:"ImpactsSelf,omitempty" yaml:"ImpactsSelf,omitempty" mapstructure:"ImpactsSelf,omitempty"`

	// IntoInventory corresponds to the JSON schema field "IntoInventory".
	IntoInventory *bool `json:"IntoInventory,omitempty" yaml:"IntoInventory,omitempty" mapstructure:"IntoInventory,omitempty"`

	// IsAction corresponds to the JSON schema field "IsAction".
	IsAction *bool `json:"IsAction,omitempty" yaml:"IsAction,omitempty" mapstructure:"IsAction,omitempty"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive,omitempty" yaml:"IsActive,omitempty" mapstructure:"IsActive,omitempty"`

	// IsBonusAction corresponds to the JSON schema field "IsBonusAction".
	IsBonusAction *bool `json:"IsBonusAction,omitempty" yaml:"IsBonusAction,omitempty" mapstructure:"IsBonusAction,omitempty"`

	// Level1SpellSlots corresponds to the JSON schema field "Level1SpellSlots".
	Level1SpellSlots *float64 `json:"Level1SpellSlots,omitempty" yaml:"Level1SpellSlots,omitempty" mapstructure:"Level1SpellSlots,omitempty"`

	// Level2SpellSlots corresponds to the JSON schema field "Level2SpellSlots".
	Level2SpellSlots *float64 `json:"Level2SpellSlots,omitempty" yaml:"Level2SpellSlots,omitempty" mapstructure:"Level2SpellSlots,omitempty"`

	// Level3SpellSlots corresponds to the JSON schema field "Level3SpellSlots".
	Level3SpellSlots *float64 `json:"Level3SpellSlots,omitempty" yaml:"Level3SpellSlots,omitempty" mapstructure:"Level3SpellSlots,omitempty"`

	// Level4SpellSlots corresponds to the JSON schema field "Level4SpellSlots".
	Level4SpellSlots *float64 `json:"Level4SpellSlots,omitempty" yaml:"Level4SpellSlots,omitempty" mapstructure:"Level4SpellSlots,omitempty"`

	// Level5SpellSlots corresponds to the JSON schema field "Level5SpellSlots".
	Level5SpellSlots *float64 `json:"Level5SpellSlots,omitempty" yaml:"Level5SpellSlots,omitempty" mapstructure:"Level5SpellSlots,omitempty"`

	// Level6SpellSlots corresponds to the JSON schema field "Level6SpellSlots".
	Level6SpellSlots *float64 `json:"Level6SpellSlots,omitempty" yaml:"Level6SpellSlots,omitempty" mapstructure:"Level6SpellSlots,omitempty"`

	// Level7SpellSlots corresponds to the JSON schema field "Level7SpellSlots".
	Level7SpellSlots *float64 `json:"Level7SpellSlots,omitempty" yaml:"Level7SpellSlots,omitempty" mapstructure:"Level7SpellSlots,omitempty"`

	// Level8SpellSlots corresponds to the JSON schema field "Level8SpellSlots".
	Level8SpellSlots *float64 `json:"Level8SpellSlots,omitempty" yaml:"Level8SpellSlots,omitempty" mapstructure:"Level8SpellSlots,omitempty"`

	// Level9SpellSlots corresponds to the JSON schema field "Level9SpellSlots".
	Level9SpellSlots *float64 `json:"Level9SpellSlots,omitempty" yaml:"Level9SpellSlots,omitempty" mapstructure:"Level9SpellSlots,omitempty"`

	// LevelMaximumRequirement corresponds to the JSON schema field
	// "LevelMaximumRequirement".
	LevelMaximumRequirement *float64 `json:"LevelMaximumRequirement,omitempty" yaml:"LevelMaximumRequirement,omitempty" mapstructure:"LevelMaximumRequirement,omitempty"`

	// LevelMinimumRequirement corresponds to the JSON schema field
	// "LevelMinimumRequirement".
	LevelMinimumRequirement *float64 `json:"LevelMinimumRequirement,omitempty" yaml:"LevelMinimumRequirement,omitempty" mapstructure:"LevelMinimumRequirement,omitempty"`

	// Quantity corresponds to the JSON schema field "Quantity".
	Quantity *float64 `json:"Quantity,omitempty" yaml:"Quantity,omitempty" mapstructure:"Quantity,omitempty"`

	// RefreshOnLongRest corresponds to the JSON schema field "RefreshOnLongRest".
	RefreshOnLongRest *bool `json:"RefreshOnLongRest,omitempty" yaml:"RefreshOnLongRest,omitempty" mapstructure:"RefreshOnLongRest,omitempty"`

	// RefreshOnShortRest corresponds to the JSON schema field "RefreshOnShortRest".
	RefreshOnShortRest *bool `json:"RefreshOnShortRest,omitempty" yaml:"RefreshOnShortRest,omitempty" mapstructure:"RefreshOnShortRest,omitempty"`

	// ResistanceTypeDomainDamageType corresponds to the JSON schema field
	// "ResistanceType__DomainDamageType".
	ResistanceTypeDomainDamageType *float64 `json:"ResistanceType__DomainDamageType,omitempty" yaml:"ResistanceType__DomainDamageType,omitempty" mapstructure:"ResistanceType__DomainDamageType,omitempty"`

	// SaveDomainCharacterStat corresponds to the JSON schema field
	// "Save__DomainCharacterStat".
	SaveDomainCharacterStat *float64 `json:"Save__DomainCharacterStat,omitempty" yaml:"Save__DomainCharacterStat,omitempty" mapstructure:"Save__DomainCharacterStat,omitempty"`

	// TargetDomainCharacterStat corresponds to the JSON schema field
	// "Target__DomainCharacterStat".
	TargetDomainCharacterStat *float64 `json:"Target__DomainCharacterStat,omitempty" yaml:"Target__DomainCharacterStat,omitempty" mapstructure:"Target__DomainCharacterStat,omitempty"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title,omitempty" yaml:"Title,omitempty" mapstructure:"Title,omitempty"`

	// UntilLongRest corresponds to the JSON schema field "UntilLongRest".
	UntilLongRest *bool `json:"UntilLongRest,omitempty" yaml:"UntilLongRest,omitempty" mapstructure:"UntilLongRest,omitempty"`

	// UntilShortRest corresponds to the JSON schema field "UntilShortRest".
	UntilShortRest *bool `json:"UntilShortRest,omitempty" yaml:"UntilShortRest,omitempty" mapstructure:"UntilShortRest,omitempty"`
}
