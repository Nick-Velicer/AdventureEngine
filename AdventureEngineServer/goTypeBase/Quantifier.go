// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type QuantifierJson struct {
	// AddedSpellDomainSpell corresponds to the JSON schema field
	// "addedSpell__domainSpell".
	AddedSpellDomainSpell *float64 `json:"addedSpell__domainSpell,omitempty" yaml:"addedSpell__domainSpell,omitempty" mapstructure:"addedSpell__domainSpell,omitempty"`

	// ConditionDomainCondition corresponds to the JSON schema field
	// "condition__domainCondition".
	ConditionDomainCondition *float64 `json:"condition__domainCondition,omitempty" yaml:"condition__domainCondition,omitempty" mapstructure:"condition__domainCondition,omitempty"`

	// DamageTypeDomainDamageType corresponds to the JSON schema field
	// "damageType__domainDamageType".
	DamageTypeDomainDamageType *float64 `json:"damageType__domainDamageType,omitempty" yaml:"damageType__domainDamageType,omitempty" mapstructure:"damageType__domainDamageType,omitempty"`

	// Delta corresponds to the JSON schema field "delta".
	Delta *float64 `json:"delta,omitempty" yaml:"delta,omitempty" mapstructure:"delta,omitempty"`

	// Description corresponds to the JSON schema field "description".
	Description *string `json:"description,omitempty" yaml:"description,omitempty" mapstructure:"description,omitempty"`

	// EffectDomainStaticEffect corresponds to the JSON schema field
	// "effect__domainStaticEffect".
	EffectDomainStaticEffect *float64 `json:"effect__domainStaticEffect,omitempty" yaml:"effect__domainStaticEffect,omitempty" mapstructure:"effect__domainStaticEffect,omitempty"`

	// Id corresponds to the JSON schema field "id".
	Id *float64 `json:"id,omitempty" yaml:"id,omitempty" mapstructure:"id,omitempty"`

	// ImpactsSelf corresponds to the JSON schema field "impactsSelf".
	ImpactsSelf *bool `json:"impactsSelf,omitempty" yaml:"impactsSelf,omitempty" mapstructure:"impactsSelf,omitempty"`

	// IntoInventory corresponds to the JSON schema field "intoInventory".
	IntoInventory *bool `json:"intoInventory,omitempty" yaml:"intoInventory,omitempty" mapstructure:"intoInventory,omitempty"`

	// IsAction corresponds to the JSON schema field "isAction".
	IsAction *bool `json:"isAction,omitempty" yaml:"isAction,omitempty" mapstructure:"isAction,omitempty"`

	// IsActive corresponds to the JSON schema field "isActive".
	IsActive *bool `json:"isActive,omitempty" yaml:"isActive,omitempty" mapstructure:"isActive,omitempty"`

	// IsBonusAction corresponds to the JSON schema field "isBonusAction".
	IsBonusAction *bool `json:"isBonusAction,omitempty" yaml:"isBonusAction,omitempty" mapstructure:"isBonusAction,omitempty"`

	// Level1SpellSlots corresponds to the JSON schema field "level1SpellSlots".
	Level1SpellSlots *float64 `json:"level1SpellSlots,omitempty" yaml:"level1SpellSlots,omitempty" mapstructure:"level1SpellSlots,omitempty"`

	// Level2SpellSlots corresponds to the JSON schema field "level2SpellSlots".
	Level2SpellSlots *float64 `json:"level2SpellSlots,omitempty" yaml:"level2SpellSlots,omitempty" mapstructure:"level2SpellSlots,omitempty"`

	// Level3SpellSlots corresponds to the JSON schema field "level3SpellSlots".
	Level3SpellSlots *float64 `json:"level3SpellSlots,omitempty" yaml:"level3SpellSlots,omitempty" mapstructure:"level3SpellSlots,omitempty"`

	// Level4SpellSlots corresponds to the JSON schema field "level4SpellSlots".
	Level4SpellSlots *float64 `json:"level4SpellSlots,omitempty" yaml:"level4SpellSlots,omitempty" mapstructure:"level4SpellSlots,omitempty"`

	// Level5SpellSlots corresponds to the JSON schema field "level5SpellSlots".
	Level5SpellSlots *float64 `json:"level5SpellSlots,omitempty" yaml:"level5SpellSlots,omitempty" mapstructure:"level5SpellSlots,omitempty"`

	// Level6SpellSlots corresponds to the JSON schema field "level6SpellSlots".
	Level6SpellSlots *float64 `json:"level6SpellSlots,omitempty" yaml:"level6SpellSlots,omitempty" mapstructure:"level6SpellSlots,omitempty"`

	// Level7SpellSlots corresponds to the JSON schema field "level7SpellSlots".
	Level7SpellSlots *float64 `json:"level7SpellSlots,omitempty" yaml:"level7SpellSlots,omitempty" mapstructure:"level7SpellSlots,omitempty"`

	// Level8SpellSlots corresponds to the JSON schema field "level8SpellSlots".
	Level8SpellSlots *float64 `json:"level8SpellSlots,omitempty" yaml:"level8SpellSlots,omitempty" mapstructure:"level8SpellSlots,omitempty"`

	// Level9SpellSlots corresponds to the JSON schema field "level9SpellSlots".
	Level9SpellSlots *float64 `json:"level9SpellSlots,omitempty" yaml:"level9SpellSlots,omitempty" mapstructure:"level9SpellSlots,omitempty"`

	// LevelMaximumRequirement corresponds to the JSON schema field
	// "levelMaximumRequirement".
	LevelMaximumRequirement *float64 `json:"levelMaximumRequirement,omitempty" yaml:"levelMaximumRequirement,omitempty" mapstructure:"levelMaximumRequirement,omitempty"`

	// LevelMinimumRequirement corresponds to the JSON schema field
	// "levelMinimumRequirement".
	LevelMinimumRequirement *float64 `json:"levelMinimumRequirement,omitempty" yaml:"levelMinimumRequirement,omitempty" mapstructure:"levelMinimumRequirement,omitempty"`

	// Quantity corresponds to the JSON schema field "quantity".
	Quantity *float64 `json:"quantity,omitempty" yaml:"quantity,omitempty" mapstructure:"quantity,omitempty"`

	// RefreshOnLongRest corresponds to the JSON schema field "refreshOnLongRest".
	RefreshOnLongRest *bool `json:"refreshOnLongRest,omitempty" yaml:"refreshOnLongRest,omitempty" mapstructure:"refreshOnLongRest,omitempty"`

	// RefreshOnShortRest corresponds to the JSON schema field "refreshOnShortRest".
	RefreshOnShortRest *bool `json:"refreshOnShortRest,omitempty" yaml:"refreshOnShortRest,omitempty" mapstructure:"refreshOnShortRest,omitempty"`

	// ResistanceTypeDomainDamageType corresponds to the JSON schema field
	// "resistanceType__domainDamageType".
	ResistanceTypeDomainDamageType *float64 `json:"resistanceType__domainDamageType,omitempty" yaml:"resistanceType__domainDamageType,omitempty" mapstructure:"resistanceType__domainDamageType,omitempty"`

	// SaveDomainCharacterStat corresponds to the JSON schema field
	// "save__domainCharacterStat".
	SaveDomainCharacterStat *float64 `json:"save__domainCharacterStat,omitempty" yaml:"save__domainCharacterStat,omitempty" mapstructure:"save__domainCharacterStat,omitempty"`

	// TargetDomainCharacterStat corresponds to the JSON schema field
	// "target__domainCharacterStat".
	TargetDomainCharacterStat *float64 `json:"target__domainCharacterStat,omitempty" yaml:"target__domainCharacterStat,omitempty" mapstructure:"target__domainCharacterStat,omitempty"`

	// Title corresponds to the JSON schema field "title".
	Title *string `json:"title,omitempty" yaml:"title,omitempty" mapstructure:"title,omitempty"`

	// UntilLongRest corresponds to the JSON schema field "untilLongRest".
	UntilLongRest *bool `json:"untilLongRest,omitempty" yaml:"untilLongRest,omitempty" mapstructure:"untilLongRest,omitempty"`

	// UntilShortRest corresponds to the JSON schema field "untilShortRest".
	UntilShortRest *bool `json:"untilShortRest,omitempty" yaml:"untilShortRest,omitempty" mapstructure:"untilShortRest,omitempty"`
}
