// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type DomainSpellJson struct {
	// ConcentrationRequired corresponds to the JSON schema field
	// "ConcentrationRequired".
	ConcentrationRequired *bool `json:"ConcentrationRequired,omitempty" yaml:"ConcentrationRequired,omitempty" mapstructure:"ConcentrationRequired,omitempty"`

	// DamageScalingDomainDice corresponds to the JSON schema field
	// "DamageScaling__DomainDice".
	DamageScalingDomainDice *float64 `json:"DamageScaling__DomainDice,omitempty" yaml:"DamageScaling__DomainDice,omitempty" mapstructure:"DamageScaling__DomainDice,omitempty"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description,omitempty" yaml:"Description,omitempty" mapstructure:"Description,omitempty"`

	// HasSomaticRequirement corresponds to the JSON schema field
	// "HasSomaticRequirement".
	HasSomaticRequirement *bool `json:"HasSomaticRequirement,omitempty" yaml:"HasSomaticRequirement,omitempty" mapstructure:"HasSomaticRequirement,omitempty"`

	// HasVerbalRequirement corresponds to the JSON schema field
	// "HasVerbalRequirement".
	HasVerbalRequirement *bool `json:"HasVerbalRequirement,omitempty" yaml:"HasVerbalRequirement,omitempty" mapstructure:"HasVerbalRequirement,omitempty"`

	// HourCastTime corresponds to the JSON schema field "HourCastTime".
	HourCastTime *float64 `json:"HourCastTime,omitempty" yaml:"HourCastTime,omitempty" mapstructure:"HourCastTime,omitempty"`

	// HourDuration corresponds to the JSON schema field "HourDuration".
	HourDuration *float64 `json:"HourDuration,omitempty" yaml:"HourDuration,omitempty" mapstructure:"HourDuration,omitempty"`

	// Id corresponds to the JSON schema field "Id".
	Id *float64 `json:"Id,omitempty" yaml:"Id,omitempty" mapstructure:"Id,omitempty"`

	// IsAction corresponds to the JSON schema field "IsAction".
	IsAction *bool `json:"IsAction,omitempty" yaml:"IsAction,omitempty" mapstructure:"IsAction,omitempty"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive,omitempty" yaml:"IsActive,omitempty" mapstructure:"IsActive,omitempty"`

	// IsBonusAction corresponds to the JSON schema field "IsBonusAction".
	IsBonusAction *bool `json:"IsBonusAction,omitempty" yaml:"IsBonusAction,omitempty" mapstructure:"IsBonusAction,omitempty"`

	// IsCantrip corresponds to the JSON schema field "IsCantrip".
	IsCantrip *bool `json:"IsCantrip,omitempty" yaml:"IsCantrip,omitempty" mapstructure:"IsCantrip,omitempty"`

	// IsMelee corresponds to the JSON schema field "IsMelee".
	IsMelee *bool `json:"IsMelee,omitempty" yaml:"IsMelee,omitempty" mapstructure:"IsMelee,omitempty"`

	// IsRanged corresponds to the JSON schema field "IsRanged".
	IsRanged *bool `json:"IsRanged,omitempty" yaml:"IsRanged,omitempty" mapstructure:"IsRanged,omitempty"`

	// IsRitual corresponds to the JSON schema field "IsRitual".
	IsRitual *bool `json:"IsRitual,omitempty" yaml:"IsRitual,omitempty" mapstructure:"IsRitual,omitempty"`

	// Level corresponds to the JSON schema field "Level".
	Level *float64 `json:"Level,omitempty" yaml:"Level,omitempty" mapstructure:"Level,omitempty"`

	// MaterialComponent corresponds to the JSON schema field "MaterialComponent".
	MaterialComponent *string `json:"MaterialComponent,omitempty" yaml:"MaterialComponent,omitempty" mapstructure:"MaterialComponent,omitempty"`

	// MinuteCastTime corresponds to the JSON schema field "MinuteCastTime".
	MinuteCastTime *float64 `json:"MinuteCastTime,omitempty" yaml:"MinuteCastTime,omitempty" mapstructure:"MinuteCastTime,omitempty"`

	// RoundDuration corresponds to the JSON schema field "RoundDuration".
	RoundDuration *float64 `json:"RoundDuration,omitempty" yaml:"RoundDuration,omitempty" mapstructure:"RoundDuration,omitempty"`

	// SchoolDomainSpellSchool corresponds to the JSON schema field
	// "School__DomainSpellSchool".
	SchoolDomainSpellSchool *float64 `json:"School__DomainSpellSchool,omitempty" yaml:"School__DomainSpellSchool,omitempty" mapstructure:"School__DomainSpellSchool,omitempty"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title,omitempty" yaml:"Title,omitempty" mapstructure:"Title,omitempty"`
}
