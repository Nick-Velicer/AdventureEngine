// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type DomainClassJson struct {
	// AbbreviatedTitle corresponds to the JSON schema field "AbbreviatedTitle".
	AbbreviatedTitle *string `json:"AbbreviatedTitle,omitempty" yaml:"AbbreviatedTitle,omitempty" mapstructure:"AbbreviatedTitle,omitempty"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description,omitempty" yaml:"Description,omitempty" mapstructure:"Description,omitempty"`

	// HitDieDomainDice corresponds to the JSON schema field "HitDie__DomainDice".
	HitDieDomainDice *float64 `json:"HitDie__DomainDice,omitempty" yaml:"HitDie__DomainDice,omitempty" mapstructure:"HitDie__DomainDice,omitempty"`

	// Id corresponds to the JSON schema field "Id".
	Id *float64 `json:"Id,omitempty" yaml:"Id,omitempty" mapstructure:"Id,omitempty"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive,omitempty" yaml:"IsActive,omitempty" mapstructure:"IsActive,omitempty"`

	// PrimaryStatsClassPrimaryAbility corresponds to the JSON schema field
	// "PrimaryStats__ClassPrimaryAbility".
	PrimaryStatsClassPrimaryAbility []float64 `json:"PrimaryStats__ClassPrimaryAbility,omitempty" yaml:"PrimaryStats__ClassPrimaryAbility,omitempty" mapstructure:"PrimaryStats__ClassPrimaryAbility,omitempty"`

	// SavesClassSave corresponds to the JSON schema field "Saves__ClassSave".
	SavesClassSave []float64 `json:"Saves__ClassSave,omitempty" yaml:"Saves__ClassSave,omitempty" mapstructure:"Saves__ClassSave,omitempty"`

	// SpellcastingStatDomainCharacterStat corresponds to the JSON schema field
	// "SpellcastingStat__DomainCharacterStat".
	SpellcastingStatDomainCharacterStat *float64 `json:"SpellcastingStat__DomainCharacterStat,omitempty" yaml:"SpellcastingStat__DomainCharacterStat,omitempty" mapstructure:"SpellcastingStat__DomainCharacterStat,omitempty"`

	// SubClassesDomainSubClass corresponds to the JSON schema field
	// "SubClasses__DomainSubClass".
	SubClassesDomainSubClass []float64 `json:"SubClasses__DomainSubClass,omitempty" yaml:"SubClasses__DomainSubClass,omitempty" mapstructure:"SubClasses__DomainSubClass,omitempty"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title,omitempty" yaml:"Title,omitempty" mapstructure:"Title,omitempty"`
}
