// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type DomainClassJson struct {
	// Description corresponds to the JSON schema field "description".
	Description *string `json:"description,omitempty" yaml:"description,omitempty" mapstructure:"description,omitempty"`

	// HitDieDomainDice corresponds to the JSON schema field "hitDie__domainDice".
	HitDieDomainDice *float64 `json:"hitDie__domainDice,omitempty" yaml:"hitDie__domainDice,omitempty" mapstructure:"hitDie__domainDice,omitempty"`

	// Id corresponds to the JSON schema field "id".
	Id *float64 `json:"id,omitempty" yaml:"id,omitempty" mapstructure:"id,omitempty"`

	// IsActive corresponds to the JSON schema field "isActive".
	IsActive *bool `json:"isActive,omitempty" yaml:"isActive,omitempty" mapstructure:"isActive,omitempty"`

	// SpellcastingStatDomainCharacterStat corresponds to the JSON schema field
	// "spellcastingStat__domainCharacterStat".
	SpellcastingStatDomainCharacterStat *float64 `json:"spellcastingStat__domainCharacterStat,omitempty" yaml:"spellcastingStat__domainCharacterStat,omitempty" mapstructure:"spellcastingStat__domainCharacterStat,omitempty"`

	// Title corresponds to the JSON schema field "title".
	Title *string `json:"title,omitempty" yaml:"title,omitempty" mapstructure:"title,omitempty"`
}
