// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type ClassSpellJson struct {
	// ClassDomainClass corresponds to the JSON schema field "Class__DomainClass".
	ClassDomainClass *float64 `json:"Class__DomainClass,omitempty" yaml:"Class__DomainClass,omitempty" mapstructure:"Class__DomainClass,omitempty"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description,omitempty" yaml:"Description,omitempty" mapstructure:"Description,omitempty"`

	// Id corresponds to the JSON schema field "Id".
	Id *float64 `json:"Id,omitempty" yaml:"Id,omitempty" mapstructure:"Id,omitempty"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive,omitempty" yaml:"IsActive,omitempty" mapstructure:"IsActive,omitempty"`

	// SpellDomainSpell corresponds to the JSON schema field "Spell__DomainSpell".
	SpellDomainSpell *float64 `json:"Spell__DomainSpell,omitempty" yaml:"Spell__DomainSpell,omitempty" mapstructure:"Spell__DomainSpell,omitempty"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title,omitempty" yaml:"Title,omitempty" mapstructure:"Title,omitempty"`
}
