// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package goTypeBase

type CharacterDomainConditionInstanceJson struct {
	// AbbreviatedTitle corresponds to the JSON schema field "AbbreviatedTitle".
	AbbreviatedTitle *string `json:"AbbreviatedTitle,omitempty" yaml:"AbbreviatedTitle,omitempty" mapstructure:"AbbreviatedTitle,omitempty"`

	// CharacterCharacter corresponds to the JSON schema field "Character__Character".
	CharacterCharacter *float64 `json:"Character__Character,omitempty" yaml:"Character__Character,omitempty" mapstructure:"Character__Character,omitempty"`

	// ConditionDomainCondition corresponds to the JSON schema field
	// "Condition__DomainCondition".
	ConditionDomainCondition *float64 `json:"Condition__DomainCondition,omitempty" yaml:"Condition__DomainCondition,omitempty" mapstructure:"Condition__DomainCondition,omitempty"`

	// Description corresponds to the JSON schema field "Description".
	Description *string `json:"Description,omitempty" yaml:"Description,omitempty" mapstructure:"Description,omitempty"`

	// Id corresponds to the JSON schema field "Id".
	Id *float64 `json:"Id,omitempty" yaml:"Id,omitempty" mapstructure:"Id,omitempty"`

	// IsActive corresponds to the JSON schema field "IsActive".
	IsActive *bool `json:"IsActive,omitempty" yaml:"IsActive,omitempty" mapstructure:"IsActive,omitempty"`

	// Source corresponds to the JSON schema field "Source".
	Source string `json:"Source" yaml:"Source" mapstructure:"Source"`

	// Target corresponds to the JSON schema field "Target".
	Target string `json:"Target" yaml:"Target" mapstructure:"Target"`

	// Title corresponds to the JSON schema field "Title".
	Title *string `json:"Title,omitempty" yaml:"Title,omitempty" mapstructure:"Title,omitempty"`
}
