//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package endpointManagers
import (
   "github.com/gin-gonic/gin"
   "gorm.io/gorm"
   controllers "AdventureEngineServer/generatedControllers"
)

func produceDBContextInjectedEndpoint(router *gin.Engine, db *gorm.DB, endpointHandler func(*gin.Context, *gorm.DB)) gin.HandlerFunc {
   return func(ctx *gin.Context) {
      endpointHandler(ctx, db)
   }
}

func ApplyGeneratedEndpoints(router *gin.Engine, db *gorm.DB) {
   router.GET("/getCampaign", produceDBContextInjectedEndpoint(router, db, controllers.GetCampaigns))
   router.GET("/getCampaign:id", produceDBContextInjectedEndpoint(router, db, controllers.GetCampaignById))
   router.POST("/saveCampaign", produceDBContextInjectedEndpoint(router, db, controllers.SaveCampaign))
   router.GET("/getCharacter", produceDBContextInjectedEndpoint(router, db, controllers.GetCharacters))
   router.GET("/getCharacter:id", produceDBContextInjectedEndpoint(router, db, controllers.GetCharacterById))
   router.POST("/saveCharacter", produceDBContextInjectedEndpoint(router, db, controllers.SaveCharacter))
   router.GET("/getDomainAction", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainActions))
   router.GET("/getDomainAction:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainActionById))
   router.POST("/saveDomainAction", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainAction))
   router.GET("/getDomainCharacterStat", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainCharacterStats))
   router.GET("/getDomainCharacterStat:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainCharacterStatById))
   router.POST("/saveDomainCharacterStat", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainCharacterStat))
   router.GET("/getDomainClass", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainClasss))
   router.GET("/getDomainClass:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainClassById))
   router.POST("/saveDomainClass", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainClass))
   router.GET("/getDomainCondition", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainConditions))
   router.GET("/getDomainCondition:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainConditionById))
   router.POST("/saveDomainCondition", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainCondition))
   router.GET("/getDomainCreatureType", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainCreatureTypes))
   router.GET("/getDomainCreatureType:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainCreatureTypeById))
   router.POST("/saveDomainCreatureType", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainCreatureType))
   router.GET("/getDomainDamageType", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainDamageTypes))
   router.GET("/getDomainDamageType:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainDamageTypeById))
   router.POST("/saveDomainDamageType", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainDamageType))
   router.GET("/getDomainDice", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainDices))
   router.GET("/getDomainDice:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainDiceById))
   router.POST("/saveDomainDice", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainDice))
   router.GET("/getDomainDiceRollType", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainDiceRollTypes))
   router.GET("/getDomainDiceRollType:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainDiceRollTypeById))
   router.POST("/saveDomainDiceRollType", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainDiceRollType))
   router.GET("/getDomainItem", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainItems))
   router.GET("/getDomainItem:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainItemById))
   router.POST("/saveDomainItem", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainItem))
   router.GET("/getDomainSize", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSizes))
   router.GET("/getDomainSize:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSizeById))
   router.POST("/saveDomainSize", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainSize))
   router.GET("/getDomainSpecies", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSpeciess))
   router.GET("/getDomainSpecies:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSpeciesById))
   router.POST("/saveDomainSpecies", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainSpecies))
   router.GET("/getDomainSpell", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSpells))
   router.GET("/getDomainSpell:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSpellById))
   router.POST("/saveDomainSpell", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainSpell))
   router.GET("/getDomainSpellSchool", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSpellSchools))
   router.GET("/getDomainSpellSchool:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSpellSchoolById))
   router.POST("/saveDomainSpellSchool", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainSpellSchool))
   router.GET("/getDomainStaticEffect", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainStaticEffects))
   router.GET("/getDomainStaticEffect:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainStaticEffectById))
   router.POST("/saveDomainStaticEffect", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainStaticEffect))
   router.GET("/getDomainSubClass", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSubClasss))
   router.GET("/getDomainSubClass:id", produceDBContextInjectedEndpoint(router, db, controllers.GetDomainSubClassById))
   router.POST("/saveDomainSubClass", produceDBContextInjectedEndpoint(router, db, controllers.SaveDomainSubClass))
   router.GET("/getQuantifier", produceDBContextInjectedEndpoint(router, db, controllers.GetQuantifiers))
   router.GET("/getQuantifier:id", produceDBContextInjectedEndpoint(router, db, controllers.GetQuantifierById))
   router.POST("/saveQuantifier", produceDBContextInjectedEndpoint(router, db, controllers.SaveQuantifier))
}
