//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   services "AdventureEngineServer/generatedServices"
   "gorm.io/gorm"
)

type QuantifierDTOAttributes struct {
   Delta *float64
   Description *string
   
   ImpactsSelf *bool
   IntoInventory *bool
   IsAction *bool
   IsActive *bool
   IsBonusAction *bool
   Level1SpellSlots *float64
   Level2SpellSlots *float64
   Level3SpellSlots *float64
   Level4SpellSlots *float64
   Level5SpellSlots *float64
   Level6SpellSlots *float64
   Level7SpellSlots *float64
   Level8SpellSlots *float64
   Level9SpellSlots *float64
   LevelMaximumRequirement *float64
   LevelMinimumRequirement *float64
   Quantity *float64
   RefreshOnLongRest *bool
   RefreshOnShortRest *bool
   Title *string
   UntilLongRest *bool
   UntilShortRest *bool
}

type QuantifierDTORelationships struct {
   AddedSpellDomainSpell DomainSpellDTO
   ConditionDomainCondition DomainConditionDTO
   DamageTypeDomainDamageType DomainDamageTypeDTO
   EffectDomainStaticEffect DomainStaticEffectDTO
   ResistanceTypeDomainDamageType DomainDamageTypeDTO
   SaveDomainCharacterStat DomainCharacterStatDTO
   TargetDomainCharacterStat DomainCharacterStatDTO
}

type QuantifierDTO struct {
   Id *float64
   
   Attributes QuantifierDTOAttributes
   
   Relationships QuantifierDTORelationships
}

func QuantifierToQuantifierDTO(db *gorm.DB, quantifier *types.Quantifier) QuantifierDTO {
   var includedAddedSpellDomainSpell types.DomainSpell
   var includedConditionDomainCondition types.DomainCondition
   var includedDamageTypeDomainDamageType types.DomainDamageType
   var includedEffectDomainStaticEffect types.DomainStaticEffect
   var includedResistanceTypeDomainDamageType types.DomainDamageType
   var includedSaveDomainCharacterStat types.DomainCharacterStat
   var includedTargetDomainCharacterStat types.DomainCharacterStat
   services.GetDomainSpellById(db, int(*quantifier.AddedSpellDomainSpell), &includedAddedSpellDomainSpell)
   services.GetDomainConditionById(db, int(*quantifier.ConditionDomainCondition), &includedConditionDomainCondition)
   services.GetDomainDamageTypeById(db, int(*quantifier.DamageTypeDomainDamageType), &includedDamageTypeDomainDamageType)
   services.GetDomainStaticEffectById(db, int(*quantifier.EffectDomainStaticEffect), &includedEffectDomainStaticEffect)
   services.GetDomainDamageTypeById(db, int(*quantifier.ResistanceTypeDomainDamageType), &includedResistanceTypeDomainDamageType)
   services.GetDomainCharacterStatById(db, int(*quantifier.SaveDomainCharacterStat), &includedSaveDomainCharacterStat)
   services.GetDomainCharacterStatById(db, int(*quantifier.TargetDomainCharacterStat), &includedTargetDomainCharacterStat)
   return QuantifierDTO{
      Id: quantifier.Id,
      Attributes: QuantifierDTOAttributes{
         Delta: quantifier.Delta,
         Description: quantifier.Description,
         
         ImpactsSelf: quantifier.ImpactsSelf,
         IntoInventory: quantifier.IntoInventory,
         IsAction: quantifier.IsAction,
         IsActive: quantifier.IsActive,
         IsBonusAction: quantifier.IsBonusAction,
         Level1SpellSlots: quantifier.Level1SpellSlots,
         Level2SpellSlots: quantifier.Level2SpellSlots,
         Level3SpellSlots: quantifier.Level3SpellSlots,
         Level4SpellSlots: quantifier.Level4SpellSlots,
         Level5SpellSlots: quantifier.Level5SpellSlots,
         Level6SpellSlots: quantifier.Level6SpellSlots,
         Level7SpellSlots: quantifier.Level7SpellSlots,
         Level8SpellSlots: quantifier.Level8SpellSlots,
         Level9SpellSlots: quantifier.Level9SpellSlots,
         LevelMaximumRequirement: quantifier.LevelMaximumRequirement,
         LevelMinimumRequirement: quantifier.LevelMinimumRequirement,
         Quantity: quantifier.Quantity,
         RefreshOnLongRest: quantifier.RefreshOnLongRest,
         RefreshOnShortRest: quantifier.RefreshOnShortRest,
         Title: quantifier.Title,
         UntilLongRest: quantifier.UntilLongRest,
         UntilShortRest: quantifier.UntilShortRest,
      },
      Relationships: QuantifierDTORelationships{
         AddedSpellDomainSpell: DomainSpellToDomainSpellDTO(db, &includedAddedSpellDomainSpell),
         ConditionDomainCondition: DomainConditionToDomainConditionDTO(db, &includedConditionDomainCondition),
         DamageTypeDomainDamageType: DomainDamageTypeToDomainDamageTypeDTO(db, &includedDamageTypeDomainDamageType),
         EffectDomainStaticEffect: DomainStaticEffectToDomainStaticEffectDTO(db, &includedEffectDomainStaticEffect),
         ResistanceTypeDomainDamageType: DomainDamageTypeToDomainDamageTypeDTO(db, &includedResistanceTypeDomainDamageType),
         SaveDomainCharacterStat: DomainCharacterStatToDomainCharacterStatDTO(db, &includedSaveDomainCharacterStat),
         TargetDomainCharacterStat: DomainCharacterStatToDomainCharacterStatDTO(db, &includedTargetDomainCharacterStat),
      },
   }
}

func QuantifierDTOToQuantifier(quantifier *QuantifierDTO) types.Quantifier {
   return types.Quantifier{
      Id: quantifier.Id,
      Delta: quantifier.Attributes.Delta,
      Description: quantifier.Attributes.Description,
      
      ImpactsSelf: quantifier.Attributes.ImpactsSelf,
      IntoInventory: quantifier.Attributes.IntoInventory,
      IsAction: quantifier.Attributes.IsAction,
      IsActive: quantifier.Attributes.IsActive,
      IsBonusAction: quantifier.Attributes.IsBonusAction,
      Level1SpellSlots: quantifier.Attributes.Level1SpellSlots,
      Level2SpellSlots: quantifier.Attributes.Level2SpellSlots,
      Level3SpellSlots: quantifier.Attributes.Level3SpellSlots,
      Level4SpellSlots: quantifier.Attributes.Level4SpellSlots,
      Level5SpellSlots: quantifier.Attributes.Level5SpellSlots,
      Level6SpellSlots: quantifier.Attributes.Level6SpellSlots,
      Level7SpellSlots: quantifier.Attributes.Level7SpellSlots,
      Level8SpellSlots: quantifier.Attributes.Level8SpellSlots,
      Level9SpellSlots: quantifier.Attributes.Level9SpellSlots,
      LevelMaximumRequirement: quantifier.Attributes.LevelMaximumRequirement,
      LevelMinimumRequirement: quantifier.Attributes.LevelMinimumRequirement,
      Quantity: quantifier.Attributes.Quantity,
      RefreshOnLongRest: quantifier.Attributes.RefreshOnLongRest,
      RefreshOnShortRest: quantifier.Attributes.RefreshOnShortRest,
      Title: quantifier.Attributes.Title,
      UntilLongRest: quantifier.Attributes.UntilLongRest,
      UntilShortRest: quantifier.Attributes.UntilShortRest,
      AddedSpellDomainSpell: quantifier.Relationships.AddedSpellDomainSpell.Id,
      ConditionDomainCondition: quantifier.Relationships.ConditionDomainCondition.Id,
      DamageTypeDomainDamageType: quantifier.Relationships.DamageTypeDomainDamageType.Id,
      EffectDomainStaticEffect: quantifier.Relationships.EffectDomainStaticEffect.Id,
      ResistanceTypeDomainDamageType: quantifier.Relationships.ResistanceTypeDomainDamageType.Id,
      SaveDomainCharacterStat: quantifier.Relationships.SaveDomainCharacterStat.Id,
      TargetDomainCharacterStat: quantifier.Relationships.TargetDomainCharacterStat.Id,
   }
}
