//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   
   
   "gorm.io/gorm"
   "reflect"
   "slices"
)

type DomainSpellSchoolDTOAttributes struct {
   Description *string
   
   IsActive *bool
   Title *string
}

type DomainSpellSchoolDTOManyToOneRelationships struct {
}

type DomainSpellSchoolDTOOneToManyRelationships struct {
}

type DomainSpellSchoolDTORelationships struct {
   ManyToOne DomainSpellSchoolDTOManyToOneRelationships
   OneToMany DomainSpellSchoolDTOOneToManyRelationships
}

type DomainSpellSchoolDTO struct {
   Id *float64
   
   Attributes DomainSpellSchoolDTOAttributes
   
   Relationships DomainSpellSchoolDTORelationships
}

func DomainSpellSchoolToDomainSpellSchoolDTO(db *gorm.DB, domainSpellSchool *types.DomainSpellSchool, traversedTables []string) *DomainSpellSchoolDTO {
   
   if (domainSpellSchool == nil) {
      print("No valid pointer passed to DTO conversion for table DomainSpellSchool")
      return nil
   }
   
   if (slices.Contains(traversedTables, reflect.TypeOf(*domainSpellSchool).Name())) {
      print("Hit circular catch case for table DomainSpellSchool\n")
      return nil
   }
   
   traversedTables = append(traversedTables, reflect.TypeOf(*domainSpellSchool).Name())
   
   
   
   return &DomainSpellSchoolDTO{
      Id: domainSpellSchool.Id,
      Attributes: DomainSpellSchoolDTOAttributes{
         Description: domainSpellSchool.Description,
         
         IsActive: domainSpellSchool.IsActive,
         Title: domainSpellSchool.Title,
      },
      Relationships: DomainSpellSchoolDTORelationships{
         ManyToOne: DomainSpellSchoolDTOManyToOneRelationships {
         },
         OneToMany: DomainSpellSchoolDTOOneToManyRelationships {
         },
      },
   }
}

func DomainSpellSchoolDTOToDomainSpellSchool(domainSpellSchool *DomainSpellSchoolDTO) types.DomainSpellSchool {
   return types.DomainSpellSchool{
      Id: domainSpellSchool.Id,
      Description: domainSpellSchool.Attributes.Description,
      
      IsActive: domainSpellSchool.Attributes.IsActive,
      Title: domainSpellSchool.Attributes.Title,
   }
}
