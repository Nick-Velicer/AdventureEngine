//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   
   
   "gorm.io/gorm"
   "reflect"
)

type DomainSpellSchoolDTOAttributes struct {
   Description *string
   IsActive *bool
   Title *string
   
}

type DomainSpellSchoolDTORelationships struct {
}

type DomainSpellSchoolDTO struct {
   Id *float64
   
   Attributes DomainSpellSchoolDTOAttributes
   
   Relationships DomainSpellSchoolDTORelationships
}

func DomainSpellSchoolToDomainSpellSchoolDTO(db *gorm.DB, domainSpellSchool *types.DomainSpellSchool, originTable *string) *DomainSpellSchoolDTO {
   
   if (originTable != nil && *originTable == reflect.TypeOf(*domainSpellSchool).Name()) {
      print("Hit circular catch case for table DomainSpellSchool\n")
      return nil
   }
   if (originTable == nil) {
      var tableName string = reflect.TypeOf(*domainSpellSchool).Name()
      originTable = &tableName
   }
   
   
   return &DomainSpellSchoolDTO{
      Id: domainSpellSchool.Id,
      Attributes: DomainSpellSchoolDTOAttributes{
         Description: domainSpellSchool.Description,
         IsActive: domainSpellSchool.IsActive,
         Title: domainSpellSchool.Title,
         
      },
      Relationships: DomainSpellSchoolDTORelationships{
      },
   }
}

func DomainSpellSchoolDTOToDomainSpellSchool(domainSpellSchool *DomainSpellSchoolDTO) types.DomainSpellSchool {
   return types.DomainSpellSchool{
      Id: domainSpellSchool.Id,
      Description: domainSpellSchool.Attributes.Description,
      IsActive: domainSpellSchool.Attributes.IsActive,
      Title: domainSpellSchool.Attributes.Title,
      
   }
}
