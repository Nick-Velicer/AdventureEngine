//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   utils "AdventureEngineServer/utils"
   services "AdventureEngineServer/generatedServices"
   "gorm.io/gorm"
)

type DomainSpellDTOAttributes struct {
   ConcentrationRequired *bool
   Description *string
   HourCastTime *float64
   HourDuration *float64
   IsAction *bool
   IsActive *bool
   IsBonusAction *bool
   IsCantrip *bool
   IsMelee *bool
   IsRanged *bool
   IsRitual *bool
   Level *float64
   MaterialComponent *string
   MinuteCastTime *float64
   RoundDuration *float64
   SomaticComponent *string
   Title *string
   VerbalComponent *string
   
}

type DomainSpellDTORelationships struct {
   DamageScalingDomainDice *DomainDiceDTO
   SchoolDomainSpellSchool *DomainSpellSchoolDTO
}

type DomainSpellDTO struct {
   Id *float64
   
   Attributes DomainSpellDTOAttributes
   
   Relationships DomainSpellDTORelationships
}

func DomainSpellToDomainSpellDTO(db *gorm.DB, domainSpell *types.DomainSpell, originTable *string) *DomainSpellDTO {
   
   var includedDamageScalingDomainDice types.DomainDice
   var includedSchoolDomainSpellSchool types.DomainSpellSchool
   
   services.GetDomainDiceById(db, int(*domainSpell.DamageScalingDomainDice), &includedDamageScalingDomainDice)
   services.GetDomainSpellSchoolById(db, int(*domainSpell.SchoolDomainSpellSchool), &includedSchoolDomainSpellSchool)
   
   return &DomainSpellDTO{
      Id: domainSpell.Id,
      Attributes: DomainSpellDTOAttributes{
         ConcentrationRequired: domainSpell.ConcentrationRequired,
         Description: domainSpell.Description,
         HourCastTime: domainSpell.HourCastTime,
         HourDuration: domainSpell.HourDuration,
         IsAction: domainSpell.IsAction,
         IsActive: domainSpell.IsActive,
         IsBonusAction: domainSpell.IsBonusAction,
         IsCantrip: domainSpell.IsCantrip,
         IsMelee: domainSpell.IsMelee,
         IsRanged: domainSpell.IsRanged,
         IsRitual: domainSpell.IsRitual,
         Level: domainSpell.Level,
         MaterialComponent: domainSpell.MaterialComponent,
         MinuteCastTime: domainSpell.MinuteCastTime,
         RoundDuration: domainSpell.RoundDuration,
         SomaticComponent: domainSpell.SomaticComponent,
         Title: domainSpell.Title,
         VerbalComponent: domainSpell.VerbalComponent,
         
      },
      Relationships: DomainSpellDTORelationships{
         DamageScalingDomainDice: utils.GetDTOPointer(func(param *types.DomainDice) *DomainDiceDTO { return DomainDiceToDomainDiceDTO(db, param , originTable) }, &includedDamageScalingDomainDice, *originTable),
         SchoolDomainSpellSchool: utils.GetDTOPointer(func(param *types.DomainSpellSchool) *DomainSpellSchoolDTO { return DomainSpellSchoolToDomainSpellSchoolDTO(db, param , originTable) }, &includedSchoolDomainSpellSchool, *originTable),
      },
   }
}

func DomainSpellDTOToDomainSpell(domainSpell *DomainSpellDTO) types.DomainSpell {
   return types.DomainSpell{
      Id: domainSpell.Id,
      ConcentrationRequired: domainSpell.Attributes.ConcentrationRequired,
      Description: domainSpell.Attributes.Description,
      HourCastTime: domainSpell.Attributes.HourCastTime,
      HourDuration: domainSpell.Attributes.HourDuration,
      IsAction: domainSpell.Attributes.IsAction,
      IsActive: domainSpell.Attributes.IsActive,
      IsBonusAction: domainSpell.Attributes.IsBonusAction,
      IsCantrip: domainSpell.Attributes.IsCantrip,
      IsMelee: domainSpell.Attributes.IsMelee,
      IsRanged: domainSpell.Attributes.IsRanged,
      IsRitual: domainSpell.Attributes.IsRitual,
      Level: domainSpell.Attributes.Level,
      MaterialComponent: domainSpell.Attributes.MaterialComponent,
      MinuteCastTime: domainSpell.Attributes.MinuteCastTime,
      RoundDuration: domainSpell.Attributes.RoundDuration,
      SomaticComponent: domainSpell.Attributes.SomaticComponent,
      Title: domainSpell.Attributes.Title,
      VerbalComponent: domainSpell.Attributes.VerbalComponent,
      
      DamageScalingDomainDice: domainSpell.Relationships.DamageScalingDomainDice.Id,
      SchoolDomainSpellSchool: domainSpell.Relationships.SchoolDomainSpellSchool.Id,
   }
}
