//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   utils "AdventureEngineServer/utils"
   services "AdventureEngineServer/generatedServices"
   "gorm.io/gorm"
)

type CharacterDomainCharacterStatInstanceDTOAttributes struct {
   Description *string
   IsActive *bool
   Title *string
   
}

type CharacterDomainCharacterStatInstanceDTORelationships struct {
   CharacterCharacter *CharacterDTO
   StatInstanceDomainCharacterStat *DomainCharacterStatDTO
}

type CharacterDomainCharacterStatInstanceDTO struct {
   Id *float64
   
   Attributes CharacterDomainCharacterStatInstanceDTOAttributes
   
   Relationships CharacterDomainCharacterStatInstanceDTORelationships
}

func CharacterDomainCharacterStatInstanceToCharacterDomainCharacterStatInstanceDTO(db *gorm.DB, characterDomainCharacterStatInstance *types.CharacterDomainCharacterStatInstance, originTable *string) *CharacterDomainCharacterStatInstanceDTO {
   
   var includedCharacterCharacter types.Character
   var includedStatInstanceDomainCharacterStat types.DomainCharacterStat
   
   services.GetCharacterById(db, int(*characterDomainCharacterStatInstance.CharacterCharacter), &includedCharacterCharacter)
   services.GetDomainCharacterStatById(db, int(*characterDomainCharacterStatInstance.StatInstanceDomainCharacterStat), &includedStatInstanceDomainCharacterStat)
   
   return &CharacterDomainCharacterStatInstanceDTO{
      Id: characterDomainCharacterStatInstance.Id,
      Attributes: CharacterDomainCharacterStatInstanceDTOAttributes{
         Description: characterDomainCharacterStatInstance.Description,
         IsActive: characterDomainCharacterStatInstance.IsActive,
         Title: characterDomainCharacterStatInstance.Title,
         
      },
      Relationships: CharacterDomainCharacterStatInstanceDTORelationships{
         CharacterCharacter: utils.GetDTOPointer(func(param *types.Character) *CharacterDTO { return CharacterToCharacterDTO(db, param , originTable) }, &includedCharacterCharacter, *originTable),
         StatInstanceDomainCharacterStat: utils.GetDTOPointer(func(param *types.DomainCharacterStat) *DomainCharacterStatDTO { return DomainCharacterStatToDomainCharacterStatDTO(db, param , originTable) }, &includedStatInstanceDomainCharacterStat, *originTable),
      },
   }
}

func CharacterDomainCharacterStatInstanceDTOToCharacterDomainCharacterStatInstance(characterDomainCharacterStatInstance *CharacterDomainCharacterStatInstanceDTO) types.CharacterDomainCharacterStatInstance {
   return types.CharacterDomainCharacterStatInstance{
      Id: characterDomainCharacterStatInstance.Id,
      Description: characterDomainCharacterStatInstance.Attributes.Description,
      IsActive: characterDomainCharacterStatInstance.Attributes.IsActive,
      Title: characterDomainCharacterStatInstance.Attributes.Title,
      
      CharacterCharacter: characterDomainCharacterStatInstance.Relationships.CharacterCharacter.Id,
      StatInstanceDomainCharacterStat: characterDomainCharacterStatInstance.Relationships.StatInstanceDomainCharacterStat.Id,
   }
}
