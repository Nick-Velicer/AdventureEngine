//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   
   
   "gorm.io/gorm"
   "reflect"
)

type DomainDamageTypeDTOAttributes struct {
   Description *string
   IsActive *bool
   Title *string
   
}

type DomainDamageTypeDTORelationships struct {
}

type DomainDamageTypeDTO struct {
   Id *float64
   
   Attributes DomainDamageTypeDTOAttributes
   
   Relationships DomainDamageTypeDTORelationships
}

func DomainDamageTypeToDomainDamageTypeDTO(db *gorm.DB, domainDamageType *types.DomainDamageType, originTable *string) *DomainDamageTypeDTO {
   
   if (originTable != nil && *originTable == reflect.TypeOf(*domainDamageType).Name()) {
      print("Hit circular catch case for table DomainDamageType\n")
      return nil
   }
   if (originTable == nil) {
      var tableName string = reflect.TypeOf(*domainDamageType).Name()
      originTable = &tableName
   }
   
   
   return &DomainDamageTypeDTO{
      Id: domainDamageType.Id,
      Attributes: DomainDamageTypeDTOAttributes{
         Description: domainDamageType.Description,
         IsActive: domainDamageType.IsActive,
         Title: domainDamageType.Title,
         
      },
      Relationships: DomainDamageTypeDTORelationships{
      },
   }
}

func DomainDamageTypeDTOToDomainDamageType(domainDamageType *DomainDamageTypeDTO) types.DomainDamageType {
   return types.DomainDamageType{
      Id: domainDamageType.Id,
      Description: domainDamageType.Attributes.Description,
      IsActive: domainDamageType.Attributes.IsActive,
      Title: domainDamageType.Attributes.Title,
      
   }
}
