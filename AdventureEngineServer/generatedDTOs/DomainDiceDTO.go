//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   
   
   "gorm.io/gorm"
   "reflect"
   "slices"
)

type DomainDiceDTOAttributes struct {
   Description *string
   
   IsActive *bool
   Maximum float64
   Minimum float64
   Title *string
}

type DomainDiceDTORelationships struct {
}

type DomainDiceDTO struct {
   Id *float64
   
   Attributes DomainDiceDTOAttributes
   
   Relationships DomainDiceDTORelationships
}

func DomainDiceToDomainDiceDTO(db *gorm.DB, domainDice *types.DomainDice, traversedTables []string) *DomainDiceDTO {
   
   if (slices.Contains(traversedTables, reflect.TypeOf(*domainDice).Name())) {
      print("Hit circular catch case for table DomainDice\n")
      return nil
   }
   
   traversedTables = append(traversedTables, reflect.TypeOf(*domainDice).Name())
   
   
   
   return &DomainDiceDTO{
      Id: domainDice.Id,
      Attributes: DomainDiceDTOAttributes{
         Description: domainDice.Description,
         
         IsActive: domainDice.IsActive,
         Maximum: domainDice.Maximum,
         Minimum: domainDice.Minimum,
         Title: domainDice.Title,
      },
      Relationships: DomainDiceDTORelationships{
      },
   }
}

func DomainDiceDTOToDomainDice(domainDice *DomainDiceDTO) types.DomainDice {
   return types.DomainDice{
      Id: domainDice.Id,
      Description: domainDice.Attributes.Description,
      
      IsActive: domainDice.Attributes.IsActive,
      Maximum: domainDice.Attributes.Maximum,
      Minimum: domainDice.Attributes.Minimum,
      Title: domainDice.Attributes.Title,
   }
}
