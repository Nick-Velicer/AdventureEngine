//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   
   services "AdventureEngineServer/generatedServices"
   "gorm.io/gorm"
   "reflect"
   "slices"
)

type DomainSubClassDTOAttributes struct {
   Description *string
   
   IsActive *bool
   Title *string
}

type DomainSubClassDTORelationships struct {
   ParentClassDomainClass *DomainClassDTO
}

type DomainSubClassDTO struct {
   Id *float64
   
   Attributes DomainSubClassDTOAttributes
   
   Relationships DomainSubClassDTORelationships
}

func DomainSubClassToDomainSubClassDTO(db *gorm.DB, domainSubClass *types.DomainSubClass, traversedTables []string) *DomainSubClassDTO {
   
   if (slices.Contains(traversedTables, reflect.TypeOf(*domainSubClass).Name())) {
      print("Hit circular catch case for table DomainSubClass\n")
      return nil
   }
   
   traversedTables = append(traversedTables, reflect.TypeOf(*domainSubClass).Name())
   
   var includedParentClassDomainClass types.DomainClass
   
   services.GetDomainClassById(db, int(*domainSubClass.ParentClassDomainClass), &includedParentClassDomainClass)
   
   return &DomainSubClassDTO{
      Id: domainSubClass.Id,
      Attributes: DomainSubClassDTOAttributes{
         Description: domainSubClass.Description,
         
         IsActive: domainSubClass.IsActive,
         Title: domainSubClass.Title,
      },
      Relationships: DomainSubClassDTORelationships{
         ParentClassDomainClass: DomainClassToDomainClassDTO(db, &includedParentClassDomainClass, traversedTables),
      },
   }
}

func DomainSubClassDTOToDomainSubClass(domainSubClass *DomainSubClassDTO) types.DomainSubClass {
   return types.DomainSubClass{
      Id: domainSubClass.Id,
      Description: domainSubClass.Attributes.Description,
      
      IsActive: domainSubClass.Attributes.IsActive,
      Title: domainSubClass.Attributes.Title,
      ParentClassDomainClass: domainSubClass.Relationships.ParentClassDomainClass.Id,
   }
}
