//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   
   
   "gorm.io/gorm"
   "reflect"
)

type CampaignDTOAttributes struct {
   Description *string
   IsActive *bool
   Title *string
   
}

type CampaignDTORelationships struct {
}

type CampaignDTO struct {
   Id *float64
   
   Attributes CampaignDTOAttributes
   
   Relationships CampaignDTORelationships
}

func CampaignToCampaignDTO(db *gorm.DB, campaign *types.Campaign, originTable *string) *CampaignDTO {
   
   if (originTable != nil && *originTable == reflect.TypeOf(*campaign).Name()) {
      print("Hit circular catch case for table Campaign\n")
      return nil
   }
   if (originTable == nil) {
      var tableName string = reflect.TypeOf(*campaign).Name()
      originTable = &tableName
   }
   
   
   return &CampaignDTO{
      Id: campaign.Id,
      Attributes: CampaignDTOAttributes{
         Description: campaign.Description,
         IsActive: campaign.IsActive,
         Title: campaign.Title,
         
      },
      Relationships: CampaignDTORelationships{
      },
   }
}

func CampaignDTOToCampaign(campaign *CampaignDTO) types.Campaign {
   return types.Campaign{
      Id: campaign.Id,
      Description: campaign.Attributes.Description,
      IsActive: campaign.Attributes.IsActive,
      Title: campaign.Attributes.Title,
      
   }
}
