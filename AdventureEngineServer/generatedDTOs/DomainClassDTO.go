//*** CAUTION ***
//This is an autogenerated file produced by regenerateBackend.py.
//Edits made here will not persist after backend regeneration.

package generatedDTOs

import (
   types "AdventureEngineServer/generatedDatabaseTypes"
   utils "AdventureEngineServer/utils"
   services "AdventureEngineServer/generatedServices"
   "gorm.io/gorm"
)

type DomainClassDTOAttributes struct {
   Description *string
   IsActive *bool
   Title *string
   
}

type DomainClassDTORelationships struct {
   HitDieDomainDice *DomainDiceDTO
   SpellcastingStatDomainCharacterStat *DomainCharacterStatDTO
}

type DomainClassDTO struct {
   Id *float64
   
   Attributes DomainClassDTOAttributes
   
   Relationships DomainClassDTORelationships
}

func DomainClassToDomainClassDTO(db *gorm.DB, domainClass *types.DomainClass, originTable *string) *DomainClassDTO {
   
   var includedHitDieDomainDice types.DomainDice
   var includedSpellcastingStatDomainCharacterStat types.DomainCharacterStat
   
   services.GetDomainDiceById(db, int(*domainClass.HitDieDomainDice), &includedHitDieDomainDice)
   services.GetDomainCharacterStatById(db, int(*domainClass.SpellcastingStatDomainCharacterStat), &includedSpellcastingStatDomainCharacterStat)
   
   return &DomainClassDTO{
      Id: domainClass.Id,
      Attributes: DomainClassDTOAttributes{
         Description: domainClass.Description,
         IsActive: domainClass.IsActive,
         Title: domainClass.Title,
         
      },
      Relationships: DomainClassDTORelationships{
         HitDieDomainDice: utils.GetDTOPointer(func(param *types.DomainDice) *DomainDiceDTO { return DomainDiceToDomainDiceDTO(db, param , originTable) }, &includedHitDieDomainDice, *originTable),
         SpellcastingStatDomainCharacterStat: utils.GetDTOPointer(func(param *types.DomainCharacterStat) *DomainCharacterStatDTO { return DomainCharacterStatToDomainCharacterStatDTO(db, param , originTable) }, &includedSpellcastingStatDomainCharacterStat, *originTable),
      },
   }
}

func DomainClassDTOToDomainClass(domainClass *DomainClassDTO) types.DomainClass {
   return types.DomainClass{
      Id: domainClass.Id,
      Description: domainClass.Attributes.Description,
      IsActive: domainClass.Attributes.IsActive,
      Title: domainClass.Attributes.Title,
      
      HitDieDomainDice: domainClass.Relationships.HitDieDomainDice.Id,
      SpellcastingStatDomainCharacterStat: domainClass.Relationships.SpellcastingStatDomainCharacterStat.Id,
   }
}
